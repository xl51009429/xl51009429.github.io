<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
    
    <entry>
      <title><![CDATA[断点续传]]></title>
      <url>http://www.bigliang.com/2017/03/31/%E6%96%AD%E7%82%B9%E7%BB%AD%E4%BC%A0/</url>
      <content type="html"><![CDATA[<p>闲着无聊想到了断点续传，一直也没有实践过，趁现在有时间学习学习，顺便记录一下。</p>
<h2 id="实现原理"><a href="#实现原理" class="headerlink" title="实现原理"></a>实现原理</h2><p>断点续传主要依赖于<code>HTTP</code>请求头定义的<code>Range</code>来完成。在请求时设置<code>Range</code>的值来决定请求的数据位置。例如下面：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">NSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:url];</div><div class="line">NSString *range = [NSString stringWithFormat:@&quot;bytes=%zd-&quot;,self.currentSize];</div><div class="line">[request setValue:range forHTTPHeaderField:@&quot;Range&quot;];</div></pre></td></tr></table></figure>
<h2 id="NSURLSession实现断点续传"><a href="#NSURLSession实现断点续传" class="headerlink" title="NSURLSession实现断点续传"></a>NSURLSession实现断点续传</h2><p>NSURLSession已经实现了对Range操作的封装，简化了断点续传的难度，而且可以很简单的实现后台下载功能。下面一步步来实现基础功能。</p>
<h3 id="1-下载"><a href="#1-下载" class="headerlink" title="1.下载"></a>1.下载</h3><p>定义属性</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">@property (nonatomic, strong)NSURLSession                        *session;</div><div class="line">@property (nonatomic, strong, readwrite)NSURLSessionDownloadTask *downloadTask;</div></pre></td></tr></table></figure>
<p>初始化session</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">- (NSURLSession *)session</div><div class="line">&#123;</div><div class="line">    if (!_session) &#123;</div><div class="line">        NSURLSessionConfiguration *config = [NSURLSessionConfiguration backgroundSessionConfigurationWithIdentifier:@&quot;bl_backgroundSessionConfiguration&quot;];</div><div class="line">        _session = [NSURLSession sessionWithConfiguration:config delegate:self delegateQueue:nil];</div><div class="line">    &#125;</div><div class="line">    return _session;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>通过上面方式定义的session，就可以简单的实现后台下载功能。</p>
<p>下面实现下载功能：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">self.downloadTask = [self.session downloadTaskWithRequest:[NSURLRequest requestWithURL:[NSURL URLWithString:[url stringByAddingPercentEncodingWithAllowedCharacters:[NSCharacterSet characterSetWithCharactersInString:@&quot;`#%^&#123;&#125;\&quot;[]|\\&lt;&gt; &quot;].invertedSet]]]];</div><div class="line">[self.downloadTask resume];</div></pre></td></tr></table></figure>
<p>暂停下载有如下三种方式</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">//第一种：不占用系统资源，不能获取resumeData</div><div class="line">[self.downloadTask cancel];</div><div class="line"></div><div class="line">//第二种：不占用系统资源，可以获取resumeData，用于实现断点续传</div><div class="line">[self.downloadTask cancelByProducingResumeData:^(NSData * _Nullable resumeData) &#123;</div><div class="line">	self.resumeData = resumeData;</div><div class="line">&#125;];</div><div class="line"></div><div class="line">//第三种：挂起 占用系统资源 长时间不resume，会超时</div><div class="line">[self.downloadTask suspend];</div></pre></td></tr></table></figure>
<h4 id="resumeData"><a href="#resumeData" class="headerlink" title="resumeData"></a>resumeData</h4><p><code>resumeData</code>记录了下载的一些信息，用于断点续传。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line">&#123;</div><div class="line">    NSURLSessionDownloadURL = &quot;http://sw.bos.baidu.com/sw-search-sp/software/78ff35549b3e6/QQ_mac_5.5.0.dmg&quot;;</div><div class="line">    </div><div class="line">    NSURLSessionResumeBytesReceived = 2339054;</div><div class="line">    </div><div class="line">    NSURLSessionResumeCurrentRequest = &lt;62706c69 73743030 d4010203 04050679 7a582476 65727369 6f6e5824 6f626a65 63747359 24617263 68697665 72542474 6f701200 0186a0af 10190708 2c474d4e 54555657 2b583959 5a68696a 6b6c6d6e 6f707555 246e756c 6cdf101f 090a0b0c 0d0e0f10 11121314 15161718 191a1b1c 1d1e1f20 21222324 25262728 29292b2c 2d2e2f30 30292f34 2b293637 38393a3b 29293e3b 292f4243 2d455224 315f1020 5f5f6e73 75726c72 65717565 73745f70 726f746f 5f70726f 705f6f62 6a5f3230 5f10205f 5f6e7375 726c7265 71756573 745f7072 6f746f5f 70726f70 5f6f626a 5f32315f 10107374 61727454 696d656f 75745469 6d655f10 1e726571 75697265 7353686f 7274436f 6e6e6563 74696f6e 54696d65 6f75745f 10205f5f 6e737572 6c726571 75657374 5f70726f 746f5f70 726f705f 6f626a5f 31305624 636c6173 735f1020 5f5f6e73 75726c72 65717565 73745f70 726f746f 5f70726f 705f6f62 6a5f3131 5f10205f 5f6e7375 726c7265 71756573 745f7072 6f746f5f 70726f70 5f6f626a 5f31325f 10205f5f 6e737572 6c726571 75657374 5f70726f 746f5f70 726f705f 6f626a5f 31335f10 1a5f5f6e 7375726c 72657175 6573745f 70726f74 6f5f7072 6f70735f 10205f5f 6e737572 6c726571 75657374 5f70726f 746f5f70 726f705f 6f626a5f 31345f10 205f5f6e 7375726c 72657175 6573745f 70726f74 6f5f7072 6f705f6f 626a5f31 355f101a 7061796c 6f616454 72616e73 6d697373 696f6e54 696d656f 75745f10 205f5f6e 7375726c 72657175 6573745f 70726f74 6f5f7072 6f705f6f 626a5f31 365f1014 616c6c6f 77656450 726f746f 636f6c54 79706573 5f10205f 5f6e7375 726c7265 71756573 745f7072 6f746f5f 70726f70 5f6f626a 5f31375f 10205f5f 6e737572 6c726571 75657374 5f70726f 746f5f70 726f705f 6f626a5f 31385224 305f1020 5f5f6e73 75726c72 65717565 73745f70 726f746f 5f70726f 705f6f62 6a5f3139 5f101f5f 5f6e7375 726c7265 71756573 745f7072 6f746f5f 70726f70 5f6f626a 5f395f10 1f5f5f6e 7375726c 72657175 6573745f 70726f74 6f5f7072 6f705f6f 626a5f38 5f101f5f 5f6e7375 726c7265 71756573 745f7072 6f746f5f 70726f70 5f6f626a 5f375f10 1f5f5f6e 7375726c 72657175 6573745f 70726f74 6f5f7072 6f705f6f 626a5f36 5f101f5f 5f6e7375 726c7265 71756573 745f7072 6f746f5f 70726f70 5f6f626a 5f355f10 1f5f5f6e 7375726c 72657175 6573745f 70726f74 6f5f7072 6f705f6f 626a5f34 5f101f5f 5f6e7375 726c7265 71756573 745f7072 6f746f5f 70726f70 5f6f626a 5f335224 325f101f 5f5f6e73 75726c72 65717565 73745f70 726f746f 5f70726f 705f6f62 6a5f315f 101f5f5f 6e737572 6c726571 75657374 5f70726f 746f5f70 726f705f 6f626a5f 305f101f 5f5f6e73 75726c72 65717565 73745f70 726f746f 5f70726f 705f6f62 6a5f3210 09800080 00230000 00000000 00000880 02801880 07800a80 0a800080 07800b80 00100080 0c800d10 02800e80 08800080 00800980 08800080 07101680 03800280 0608d348 0f49294b 4c574e53 2e626173 655b4e53 2e72656c 61746976 65800080 0580045f 104c6874 74703a2f 2f73772e 626f732e 62616964 752e636f 6d2f7377 2d736561 7263682d 73702f73 6f667477 6172652f 37386666 33353534 39623365 362f5151 5f6d6163 5f352e35 2e302e64 6d67d24f 5051525a 24636c61 73736e61 6d655824 636c6173 73657355 4e535552 4ca25153 584e534f 626a6563 7423404e 00000000 00001000 09100413 ffffffff ffffffff 53474554 d35b5c0f 5d626757 4e532e6b 6579735a 4e532e6f 626a6563 7473a45e 5f606180 0f801080 118012a4 63646566 80138014 80158016 80175a55 7365722d 4167656e 74564163 63657074 5f100f41 63636570 742d4c61 6e677561 67655f10 0f416363 6570742d 456e636f 64696e67 5f103244 6f776e6c 6f616446 696c6544 656d6f2f 31204346 4e657477 6f726b2f 3830382e 312e3420 44617277 696e2f31 362e302e 30532a2f 2a557a68 2d636e5d 677a6970 2c206465 666c6174 65d24f50 71725f10 134e534d 75746162 6c654469 6374696f 6e617279 a3737453 5f10134e 534d7574 61626c65 44696374 696f6e61 72795c4e 53446963 74696f6e 617279d2 4f507677 5c4e5355 524c5265 71756573 74a27853 5c4e5355 524c5265 71756573 745f100f 4e534b65 79656441 72636869 766572d1 7b7c5f10 1b4e534b 65796564 41726368 69766552 6f6f744f 626a6563 744b6579 80010008 0011001a 0023002d 00320037 00530059 009a009d 00c000e3 00f60117 013a0141 01640187 01aa01c7 01ea020d 022a024d 02640287 02aa02ad 02d002f2 03140336 0358037a 039c03be 03c103e3 04050427 0429042b 042d0436 04370439 043b043d 043f0441 04430445 04470449 044b044d 044f0451 04530455 04570459 045b045d 045f0461 04630465 04670469 046a0471 04790485 04870489 048b04da 04df04ea 04f304f9 04fc0505 050e0510 05110513 051c0520 0527052f 053a053f 05410543 05450547 054c054e 05500552 05540556 05610568 057a058c 05c105c5 05cb05d9 05de05f4 05f8060e 061b0620 062d0630 063d064f 06520670 00000000 00000201 00000000 0000007d 00000000 00000000 00000000 00000672&gt;;</div><div class="line">    </div><div class="line">    NSURLSessionResumeEntityTag = &quot;\&quot;afda885a630e48ae4a3bedd3d0bc7094\&quot;&quot;;</div><div class="line">    </div><div class="line">    NSURLSessionResumeInfoTempFileName = &quot;CFNetworkDownload_Occ2S2.tmp&quot;;</div><div class="line">    </div><div class="line">    NSURLSessionResumeInfoVersion = 2;</div><div class="line">    </div><div class="line">    NSURLSessionResumeOriginalRequest = &lt;62706c69 73743030 d4010203 04050650 51582476 65727369 6f6e5824 6f626a65 63747359 24617263 68697665 72542474 6f701200 0186a0ac 0708243b 41424849 4a234b4c 55246e75 6c6cdf10 19090a0b 0c0d0e0f 10111213 14151617 18191a1b 1c1d1e1f 20212223 24252627 28282a27 2c232d2e 2f2a2a27 2f2a2736 37253952 24315f10 10737461 72745469 6d656f75 7454696d 655f101e 72657175 69726573 53686f72 74436f6e 6e656374 696f6e54 696d656f 75745f10 205f5f6e 7375726c 72657175 6573745f 70726f74 6f5f7072 6f705f6f 626a5f31 30562463 6c617373 5f10205f 5f6e7375 726c7265 71756573 745f7072 6f746f5f 70726f70 5f6f626a 5f31315f 10205f5f 6e737572 6c726571 75657374 5f70726f 746f5f70 726f705f 6f626a5f 31325f10 205f5f6e 7375726c 72657175 6573745f 70726f74 6f5f7072 6f705f6f 626a5f31 335f101a 5f5f6e73 75726c72 65717565 73745f70 726f746f 5f70726f 70735f10 205f5f6e 7375726c 72657175 6573745f 70726f74 6f5f7072 6f705f6f 626a5f31 345f1020 5f5f6e73 75726c72 65717565 73745f70 726f746f 5f70726f 705f6f62 6a5f3135 5f101a70 61796c6f 61645472 616e736d 69737369 6f6e5469 6d656f75 745f1014 616c6c6f 77656450 726f746f 636f6c54 79706573 5224305f 101f5f5f 6e737572 6c726571 75657374 5f70726f 746f5f70 726f705f 6f626a5f 395f101f 5f5f6e73 75726c72 65717565 73745f70 726f746f 5f70726f 705f6f62 6a5f385f 101f5f5f 6e737572 6c726571 75657374 5f70726f 746f5f70 726f705f 6f626a5f 375f101f 5f5f6e73 75726c72 65717565 73745f70 726f746f 5f70726f 705f6f62 6a5f365f 101f5f5f 6e737572 6c726571 75657374 5f70726f 746f5f70 726f705f 6f626a5f 355f101f 5f5f6e73 75726c72 65717565 73745f70 726f746f 5f70726f 705f6f62 6a5f345f 101f5f5f 6e737572 6c726571 75657374 5f70726f 746f5f70 726f705f 6f626a5f 33522432 5f101f5f 5f6e7375 726c7265 71756573 745f7072 6f746f5f 70726f70 5f6f626a 5f315f10 1f5f5f6e 7375726c 72657175 6573745f 70726f74 6f5f7072 6f705f6f 626a5f30 5f101f5f 5f6e7375 726c7265 71756573 745f7072 6f746f5f 70726f70 5f6f626a 5f321009 23000000 00000000 00088002 800b8007 80098009 80008007 800a1000 10028008 80008000 80078008 80008007 10108003 80028006 08d33c0d 3d2a3f40 574e532e 62617365 5b4e532e 72656c61 74697665 80008005 80045f10 4c687474 703a2f2f 73772e62 6f732e62 61696475 2e636f6d 2f73772d 73656172 63682d73 702f736f 66747761 72652f37 38666633 35353439 62336536 2f51515f 6d61635f 352e352e 302e646d 67d24344 45465a24 636c6173 736e616d 65582463 6c617373 6573554e 5355524c a2454758 4e534f62 6a656374 23404e00 00000000 00100009 13ffffff ffffffff ffd24344 4d4e5c4e 5355524c 52657175 657374a2 4f475c4e 5355524c 52657175 6573745f 100f4e53 4b657965 64417263 68697665 72d15253 5f101b4e 534b6579 65644172 63686976 65526f6f 744f626a 6563744b 65798001 00080011 001a0023 002d0032 00370044 004a007f 00820095 00b600d9 00e00103 01260149 01660189 01ac01c9 01e001e3 02050227 0249026b 028d02af 02d102d4 02f60318 033a033c 03450346 0348034a 034c034e 03500352 03540356 0358035a 035c035e 03600362 03640366 0368036a 036c036e 03700371 03780380 038c038e 03900392 03e103e6 03f103fa 04000403 040c0415 04170418 04210426 04330436 04430455 04580476 00000000 00000201 00000000 00000054 00000000 00000000 00000000 00000478&gt;;</div><div class="line">    </div><div class="line">    NSURLSessionResumeServerDownloadDate = &quot;Fri, 24 Mar 2017 02:43:46 GMT&quot;;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>通过下载的代理方法监听下载的情况，需要实现下面的三个代理</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&lt;NSURLSessionDelegate, NSURLSessionTaskDelegate, NSURLSessionDownloadDelegate&gt;</div></pre></td></tr></table></figure>
<p>NSURLSessionDownloadDelegate代理需要实现的方法：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">- (void)URLSession:(NSURLSession *)session downloadTask:(NSURLSessionDownloadTask *)downloadTask didWriteData:(int64_t)bytesWritten totalBytesWritten:(int64_t)totalBytesWritten totalBytesExpectedToWrite:(int64_t)totalBytesExpectedToWrite</div><div class="line">&#123;</div><div class="line">	//该方法获取下载进度</div><div class="line">&#125;</div><div class="line"></div><div class="line">- (void)URLSession:(NSURLSession *)session downloadTask:(NSURLSessionDownloadTask *)downloadTask didFinishDownloadingToURL:(NSURL *)location</div><div class="line">&#123;</div><div class="line">    //下载成功，location为文件下载位置，为.tmp文件，此处需要对文件进行move操作，并把文件类型改为原本的类型。</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>NSURLSessionTaskDelegate代理需要实现的方法：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">- (void)URLSession:(NSURLSession *)session task:(NSURLSessionTask *)task didCompleteWithError:(NSError *)error</div><div class="line">&#123;</div><div class="line">    //下载完成，出错或者成功都会调用，后面应用下载过程 进程被杀死会用到该方法</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>NSURLSessionDelegate代理需要实现的方法：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">- (void)URLSessionDidFinishEventsForBackgroundURLSession:(NSURLSession *)session</div><div class="line">&#123;</div><div class="line">     //后台下载过程，下载完成调用该代理方法</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="2-断点续传"><a href="#2-断点续传" class="headerlink" title="2.断点续传"></a>2.断点续传</h3><p>获取了resumeData，就可以通过下面的方法实现断点续传了。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">self.downloadTask = [self.session downloadTaskWithResumeData:self.resumeData];</div><div class="line">[self.downloadTask resume];</div></pre></td></tr></table></figure>
<h3 id="3-后台下载"><a href="#3-后台下载" class="headerlink" title="3.后台下载"></a>3.后台下载</h3><p>在定义Session的时候，config指定了可以后台下载.在切到后台之后，Session的Delegate不会再收到消息，直到所有下载任务全都完成后，系统会调用ApplicationDelegate的如下代理：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">- (void)application:(UIApplication *)application handleEventsForBackgroundURLSession:(NSString *)identifier completionHandler:(void (^)())completionHandler</div><div class="line">&#123;</div><div class="line">	// 保存这个block 在Session的代理方法调用</div><div class="line">    self.backgroundSessionCompletionHandler = completionHandler;</div><div class="line">    //添加本地推送</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>之后，调用Session的代理方法<code>URLSession:downloadTask:didFinishDownloadingToURL:</code>和<code>URLSession:task:didCompleteWithError</code>，最后调用如下代理方法：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">- (void)URLSessionDidFinishEventsForBackgroundURLSession:(NSURLSession *)session</div><div class="line">&#123;</div><div class="line">    AppDelegate *appDelegate = (AppDelegate *)[[UIApplication sharedApplication] delegate];</div><div class="line">    if (appDelegate.backgroundSessionCompletionHandler) &#123;</div><div class="line">        void (^completionHandler)() = appDelegate.backgroundSessionCompletionHandler;</div><div class="line">        appDelegate.backgroundSessionCompletionHandler = nil;</div><div class="line">        completionHandler();</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>在这个代理方法中，需要调用之前<code>ApplicationDelegate</code>的代理方法保存的block。（看了好多资料都需要调用，但是ApplicationDelegate的代理方法不实现好像也没什么影响）</p>
<h3 id="4-后台下载进程被杀死"><a href="#4-后台下载进程被杀死" class="headerlink" title="4.后台下载进程被杀死"></a>4.后台下载进程被杀死</h3><p>进程被杀死以后，系统保存了error信息，在进入应用的时候,<code>NSURLSessionConfiguration</code>设置的<code>Identifier</code>就起作用了，当<code>Identifier</code>相同的时候，一旦生成Session对象并设置Delegate，马上可以收到上一次关闭程序之前没有汇报工作的Task的结束情况.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">NSURLSessionConfiguration *config = [NSURLSessionConfiguration backgroundSessionConfigurationWithIdentifier:@&quot;bl_backgroundSessionConfiguration&quot;];</div><div class="line">_session = [NSURLSession sessionWithConfiguration:config delegate:self delegateQueue:nil];</div></pre></td></tr></table></figure>
<p>在NSURLSessionTaskDelegate的代理方法可以通过error拿到resumeData，代码如下：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">- (void)URLSession:(NSURLSession *)session task:(NSURLSessionTask *)task didCompleteWithError:(NSError *)error</div><div class="line">&#123;</div><div class="line">    if (error) &#123;</div><div class="line">        if ([error.userInfo objectForKey:NSURLSessionDownloadTaskResumeData])&#123;</div><div class="line">            self.resumeData = [error.userInfo objectForKey:NSURLSessionDownloadTaskResumeData];</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="iOS10的问题"><a href="#iOS10的问题" class="headerlink" title="iOS10的问题"></a>iOS10的问题</h3><p>在iOS10设备上出现如下错误：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">2017-03-31 18:07:42.829 DownloadFileDemo[56517:736908] *** -[NSKeyedUnarchiver initForReadingWithData:]: data is NULL</div><div class="line">2017-03-31 18:07:42.829 DownloadFileDemo[56517:736908] *** -[NSKeyedUnarchiver initForReadingWithData:]: data is NULL</div><div class="line">2017-03-31 18:07:42.830 DownloadFileDemo[56517:736908] Invalid resume data for background download. Background downloads must use http or https and must download to an accessible file.</div></pre></td></tr></table></figure>
<p>参考<a href="http://stackoverflow.com/questions/39346231/resume-nsurlsession-on-ios10" target="_blank" rel="external">Resume NSUrlSession on iOS10</a>，说这是一个bug，好像在iOS10.2解决，我测试的环境是10.1。报错的大概意思是对resumeData解档获取<code>NSURLSessionResumeCurrentRequest</code>和<code>NSURLSessionResumeOriginalRequest</code>失败，参考解决方案可以获得一个新的resumeData。</p>
<h3 id="Demo地址"><a href="#Demo地址" class="headerlink" title="Demo地址"></a>Demo地址</h3><ul>
<li><a href="https://github.com/xl51009429/DownLoadFileDemo" target="_blank" rel="external">Demo</a></li>
</ul>
<h3 id="参考资料："><a href="#参考资料：" class="headerlink" title="参考资料："></a>参考资料：</h3><ul>
<li><a href="http://www.cnblogs.com/biosli/p/iOS_Network_URL_Session.html" target="_blank" rel="external">NSURLSession简介</a></li>
<li><a href="http://www.jianshu.com/p/b4edfa0b71d8" target="_blank" rel="external">基于iOS 10、realm封装的下载器</a></li>
<li><a href="https://code.tutsplus.com/tutorials/ios-7-sdk-background-transfer-service--mobile-20595" target="_blank" rel="external">iOS 7 SDK: Background Transfer Service</a></li>
<li><a href="http://stackoverflow.com/questions/39346231/resume-nsurlsession-on-ios10" target="_blank" rel="external">Resume NSUrlSession on iOS10</a></li>
</ul>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Java笔记]]></title>
      <url>http://www.bigliang.com/2017/02/15/Java%E7%AC%94%E8%AE%B0/</url>
      <content type="html"><![CDATA[<h4 id="response向页面输出中文乱码的问题"><a href="#response向页面输出中文乱码的问题" class="headerlink" title="response向页面输出中文乱码的问题"></a>response向页面输出中文乱码的问题</h4><ul>
<li><p>字节</p>
<p>  设置浏览器打开文件时的编码：</p>
<p>  <code>response.setHeader(&quot;Content-Type&quot;,&quot;text/html;charset=UTF-8&quot;);</code></p>
<p>  获取字符串的字节数组:</p>
<p>  <code>&quot;中文字符&quot;.getBytes(&quot;UTF-8&quot;)</code></p>
</li>
<li><p>字符</p>
<p>  设置浏览器打开文件时的编码：</p>
<p>  <code>response.setHeader(&quot;Content-Type&quot;,&quot;text/html;charset=UTF-8&quot;);</code></p>
<p>  设置response缓冲区的编码（默认是ISO-8859-1）</p>
<p>  <code>response.setCharacterEncoding(&quot;UTF-8&quot;);</code></p>
<p>  简写：</p>
<p>  <code>response.setContentType(&quot;text/html;charset=UTF-8&quot;);</code></p>
</li>
</ul>
<h4 id="request获取中文乱码的问题"><a href="#request获取中文乱码的问题" class="headerlink" title="request获取中文乱码的问题"></a>request获取中文乱码的问题</h4><ul>
<li><p>post</p>
<p>  设置request缓存区的编码</p>
<p>  <code>request.setCharacterEncoding(&quot;UTF-8&quot;);</code></p>
</li>
<li><p>get</p>
<p>  修改tomcat配置文件（不推荐）</p>
<p>  通过String的构造方法</p>
<p>  <code>username = new String(username.getBytes(&quot;ISO-8859-1&quot;),&quot;UTF-8&quot;);</code></p>
</li>
</ul>
<h4 id="JSP的内置对象（9个）"><a href="#JSP的内置对象（9个）" class="headerlink" title="JSP的内置对象（9个）"></a>JSP的内置对象（9个）</h4><ul>
<li>request <code>HttpServletRequest</code>对象</li>
<li>response <code>HttpServletResponse</code>对象</li>
<li>session <code>HttpSession</code>对象</li>
<li>application <code>ServletContext</code>对象</li>
<li>out <code>JspWriter</code>对象</li>
<li>pageContext <code>PageContext</code>对象</li>
<li>page <code>Object</code>对象</li>
<li>config <code>ServletConfig</code>对象</li>
<li>exception <code>Throwable</code>对象</li>
</ul>
<h4 id="JSP四个域对象"><a href="#JSP四个域对象" class="headerlink" title="JSP四个域对象"></a>JSP四个域对象</h4><ul>
<li>servletContext:整个web应用</li>
<li>session:一次会话</li>
<li>request:一次请求</li>
<li>pageContext:当前页面</li>
</ul>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[NSURLProtocol学习]]></title>
      <url>http://www.bigliang.com/2017/02/13/NSURLProtocol%E5%AD%A6%E4%B9%A0/</url>
      <content type="html"><![CDATA[<p><code>NSURLPtotocol</code>类并不是一个protocol，他其实就是一个抽象类，可以继承该类重写类中的方法对网络请求进行拦截处理。可以拦截<code>UIWebView</code>，<code>NSURLSession</code>等发出的请求，但是不能拦截<code>WKWebView</code>的请求。<a id="more"></a></p>
<h2 id="使用NSURLPtotocol"><a href="#使用NSURLPtotocol" class="headerlink" title="使用NSURLPtotocol"></a>使用NSURLPtotocol</h2><h4 id="定义子类和实现父类方法"><a href="#定义子类和实现父类方法" class="headerlink" title="定义子类和实现父类方法"></a>定义子类和实现父类方法</h4><p>代码如下：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div></pre></td><td class="code"><pre><div class="line">@interface BLURLProtocol ()</div><div class="line"></div><div class="line">@property (nonatomic, strong) NSURLSessionTask *task;</div><div class="line"></div><div class="line">@end</div><div class="line"></div><div class="line">static NSString *const URLProtocolHandledKey = @&quot;com.bigliang.urlprotocolkey&quot;;</div><div class="line"></div><div class="line">@implementation BLURLProtocol</div><div class="line"></div><div class="line">+ (BOOL)canInitWithRequest:(NSURLRequest *)request</div><div class="line">&#123;</div><div class="line">    NSLog(@&quot;canInitWithRequest&quot;);</div><div class="line">    if ([NSURLProtocol propertyForKey:URLProtocolHandledKey inRequest:request]) &#123;</div><div class="line">        return NO;</div><div class="line">    &#125;</div><div class="line">    return YES;</div><div class="line">&#125;</div><div class="line"></div><div class="line">+ (NSURLRequest *)canonicalRequestForRequest:(NSURLRequest *)request</div><div class="line">&#123;</div><div class="line">    NSLog(@&quot;canonicalRequestForRequest&quot;);</div><div class="line">    return request;</div><div class="line">&#125;</div><div class="line"></div><div class="line">+ (BOOL)requestIsCacheEquivalent:(NSURLRequest *)a toRequest:(NSURLRequest *)b</div><div class="line">&#123;</div><div class="line">    NSLog(@&quot;canonicalRequestForRequest&quot;);</div><div class="line">    return [super requestIsCacheEquivalent:a toRequest:b];</div><div class="line">&#125;</div><div class="line"></div><div class="line">- (void)startLoading</div><div class="line">&#123;</div><div class="line">    NSLog(@&quot;startLoading&quot;);</div><div class="line">    NSMutableURLRequest *mutableReqeust = [[self request] mutableCopy];</div><div class="line">    [NSURLProtocol setProperty:@YES forKey:URLProtocolHandledKey inRequest:mutableReqeust];</div><div class="line">    self.task = [[NSURLSession sharedSession] dataTaskWithRequest:mutableReqeust completionHandler:^(NSData * _Nullable data, NSURLResponse * _Nullable response, NSError * _Nullable error) &#123;</div><div class="line">        </div><div class="line">    &#125;];</div><div class="line">    [task resume];</div><div class="line">&#125;</div><div class="line"></div><div class="line">- (void)stopLoading</div><div class="line">&#123;</div><div class="line">    NSLog(@&quot;stopLoading&quot;);</div><div class="line">    [self.task cancel];</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<ul>
<li>发起请求</li>
<li>首先调用<code>canInitWithRequest</code>方法，该方法表示是否对网络请求进行处理，如果返回NO，URL Loading System进行默认处理，表示不拦截。如果返回YES，表示自己要处理该请求，进行下一步。</li>
<li>调用<code>canonicalRequestForRequest</code>，该方法返回<code>NSURLRequest</code>对象，在该方法中可以对<code>NSURLRequest</code>对象进行一些处理再返回，比如添加header，修改host。</li>
<li>调用<code>startLoading</code>方法，开始发送请求。在这个方法里面也可以对这个request做各种处理，比如添加请求头，重定向网络，使用自定义的缓存等。<code>[NSURLProtocol setProperty:@YES forKey:URLProtocolHandledKey inRequest:mutableReqeust]</code>使用该方法对<code>request</code>进行标记，防止循环处理一个请求。</li>
<li>调用<code>stopLoading</code>方法，结束请求。</li>
</ul>
<p>上面的方法就对一个网络请求进行了拦截并且处理，并在<code>startLoading</code>里面重新发送了请求，但是新的请求跟拦截的请求不是同一个，被拦截的请求想收到<code>response</code>还得需要<code>client</code>对象。</p>
<p>每一个<code>NSURLProtocol</code>的子类都有一个<code>client</code>对象，所有的<code>client</code>都实现了<code>NSURLProtocolClient</code>协议，可以通过<code>client</code>把新请求的<code>response</code>发给被拦截的请求，这样被拦截的请求也就可以收到<code>response</code>并且进行处理。<code>client</code>通过下面的方法进行<code>response</code>转发。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">[self.client URLProtocol:self didReceiveResponse:response cacheStoragePolicy:NSURLCacheStorageNotAllowed];</div><div class="line">[self.client URLProtocol:self didLoadData:data];</div><div class="line">[self.client URLProtocolDidFinishLoading:self];</div><div class="line">[self.client URLProtocol:self didFailWithError:error];</div></pre></td></tr></table></figure>
<h4 id="注册NSURLPtotocol的子类"><a href="#注册NSURLPtotocol的子类" class="headerlink" title="注册NSURLPtotocol的子类"></a>注册NSURLPtotocol的子类</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">[NSURLProtocol registerClass:[BLURLProtocol class]];</div></pre></td></tr></table></figure>
<p>要想自己定义的<code>BLURLProtocol</code>类起作用，就必须进行注册。相对应的也有<code>unregistClass</code>方法。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[[转]深入理解RunLoop]]></title>
      <url>http://www.bigliang.com/2016/12/27/%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3RunLoop(%E8%BD%AC)/</url>
      <content type="html"><![CDATA[<p>RunLoop 是 iOS 和 OSX 开发中非常基础的一个概念，这篇文章将从 <code>CFRunLoop</code> 的源码入手，介绍 RunLoop 的概念以及底层实现原理。之后会介绍一下在 iOS 中，苹果是如何利用 RunLoop 实现自动释放池、延迟回调、触摸事件、屏幕刷新等功能的。</p>
<h3 id="RunLoop-的概念"><a href="#RunLoop-的概念" class="headerlink" title="RunLoop 的概念"></a>RunLoop 的概念</h3><p>一般来讲，一个线程一次只能执行一个任务，执行完成后线程就会退出。如果我们需要一个机制，让线程能随时处理事件但并不退出，通常的代码逻辑是这样的：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">function loop() &#123;</div><div class="line">    initialize();</div><div class="line">    do &#123;</div><div class="line">        var message = get_next_message();</div><div class="line">        process_message(message);</div><div class="line">    &#125; while (message != quit);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>这种模型通常被称作 <a href="https://en.wikipedia.org/wiki/Event_loop" target="_blank" rel="external">Event Loop</a>。 Event Loop 在很多系统和框架里都有实现，比如 Node.js 的事件处理，比如 Windows 程序的消息循环，再比如 OSX/iOS 里的 RunLoop。实现这种模型的关键点在于：如何管理事件/消息，如何让线程在没有处理消息时休眠以避免资源占用、在有消息到来时立刻被唤醒。</p>
<p>所以，RunLoop 实际上就是一个对象，这个对象管理了其需要处理的事件和消息，并提供了一个入口函数来执行上面 Event Loop 的逻辑。线程执行了这个函数后，就会一直处于这个函数内部 “接受消息-&gt;等待-&gt;处理” 的循环中，直到这个循环结束（比如传入 <code>quit</code> 的消息），函数返回。</p>
<p>OSX/iOS 系统中，提供了两个这样的对象：<code>NSRunLoop</code> 和 <code>CFRunLoopRef</code>。<br><code>CFRunLoopRef</code> 是在 <code>CoreFoundation</code> 框架内的，它提供了纯 C 函数的 API，所有这些 API 都是线程安全的。</p>
<p><code>CFRunLoopRef</code> 的代码是<a href="https://opensource.apple.com/source/CF/CF-855.17/CFRunLoop.c" target="_blank" rel="external">开源</a>的，你可以在这里 <a href="http://opensource.apple.com/tarballs/CF/" target="_blank" rel="external">http://opensource.apple.com/tarballs/CF/</a> 下载到整个 <code>CoreFoundation</code> 的源码来查看。</p>
<p>(Update: Swift 开源后，苹果又维护了一个跨平台的 <code>CoreFoundation</code> 版本：<a href="https://github.com/apple/swift-corelibs-foundation/" target="_blank" rel="external">https://github.com/apple/swift-corelibs-foundation/</a>，这个版本的源码可能和现有 iOS 系统中的实现略不一样，但更容易编译，而且已经适配了 Linux/Windows。)</p>
<h3 id="RunLoop-与线程的关系"><a href="#RunLoop-与线程的关系" class="headerlink" title="RunLoop 与线程的关系"></a>RunLoop 与线程的关系</h3><p>首先，iOS 开发中能遇到两个线程对象: <code>pthread_t</code> 和 <code>NSThread</code>。过去苹果有份文档标明了 <code>NSThread</code> 只是 <code>pthread_t</code> 的封装，但那份文档已经失效了，现在它们也有可能都是直接包装自最底层的 <code>mach thread</code>。苹果并没有提供这两个对象相互转换的接口，但不管怎么样，可以肯定的是 <code>pthread_t</code> 和 <code>NSThread</code> 是一一对应的。比如，你可以通过 <code>pthread_main_thread_np()</code> 或 <code>[NSThread mainThread]</code> 来获取主线程；也可以通过 <code>pthread_self()</code> 或 <code>[NSThread currentThread]</code> 来获取当前线程。<code>CFRunLoop</code> 是基于 <code>pthread</code> 来管理的。</p>
<p>苹果不允许直接创建 RunLoop，它只提供了两个自动获取的函数：<code>CFRunLoopGetMain()</code> 和 <code>CFRunLoopGetCurrent()</code>。 这两个函数内部的逻辑大概是下面这样:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div></pre></td><td class="code"><pre><div class="line">/// 全局的Dictionary，key 是 pthread_t， value 是 CFRunLoopRef</div><div class="line">static CFMutableDictionaryRef loopsDic;</div><div class="line">/// 访问 loopsDic 时的锁</div><div class="line">static CFSpinLock_t loopsLock;</div><div class="line"> </div><div class="line">/// 获取一个 pthread 对应的 RunLoop。</div><div class="line">CFRunLoopRef _CFRunLoopGet(pthread_t thread) &#123;</div><div class="line">    OSSpinLockLock(&amp;loopsLock);</div><div class="line">    </div><div class="line">    if (!loopsDic) &#123;</div><div class="line">        // 第一次进入时，初始化全局Dic，并先为主线程创建一个 RunLoop。</div><div class="line">        loopsDic = CFDictionaryCreateMutable();</div><div class="line">        CFRunLoopRef mainLoop = _CFRunLoopCreate();</div><div class="line">        CFDictionarySetValue(loopsDic, pthread_main_thread_np(), mainLoop);</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    /// 直接从 Dictionary 里获取。</div><div class="line">    CFRunLoopRef loop = CFDictionaryGetValue(loopsDic, thread));</div><div class="line">    </div><div class="line">    if (!loop) &#123;</div><div class="line">        /// 取不到时，创建一个</div><div class="line">        loop = _CFRunLoopCreate();</div><div class="line">        CFDictionarySetValue(loopsDic, thread, loop);</div><div class="line">        /// 注册一个回调，当线程销毁时，顺便也销毁其对应的 RunLoop。</div><div class="line">        _CFSetTSD(..., thread, loop, __CFFinalizeRunLoop);</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    OSSpinLockUnLock(&amp;loopsLock);</div><div class="line">    return loop;</div><div class="line">&#125;</div><div class="line"> </div><div class="line">CFRunLoopRef CFRunLoopGetMain() &#123;</div><div class="line">    return _CFRunLoopGet(pthread_main_thread_np());</div><div class="line">&#125;</div><div class="line"> </div><div class="line">CFRunLoopRef CFRunLoopGetCurrent() &#123;</div><div class="line">    return _CFRunLoopGet(pthread_self());</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>从上面的代码可以看出，线程和 RunLoop 之间是一一对应的，其关系是保存在一个全局的 Dictionary 里。线程刚创建时并没有 RunLoop，如果你不主动获取，那它一直都不会有。RunLoop 的创建是发生在第一次获取时，RunLoop 的销毁是发生在线程结束时。你只能在一个线程的内部获取其 RunLoop（主线程除外）。</p>
<h3 id="RunLoop-对外的接口"><a href="#RunLoop-对外的接口" class="headerlink" title="RunLoop 对外的接口"></a>RunLoop 对外的接口</h3><p>在 CoreFoundation 里面关于 RunLoop 有5个类:</p>
<ul>
<li>CFRunLoopRef</li>
<li>CFRunLoopModeRef</li>
<li>CFRunLoopSourceRef</li>
<li>CFRunLoopTimerRef</li>
<li>CFRunLoopObserverRef</li>
</ul>
<p>其中 <code>CFRunLoopModeRef</code> 类并没有对外暴露，只是通过 <code>CFRunLoopRef</code> 的接口进行了封装。他们的关系如下:</p>
<p><img src="http://www.bigliang.com/image/RunLoopOne.png" alt=""></p>
<p>一个 RunLoop 包含若干个 Mode，每个 Mode 又包含若干个 Source/Timer/Observer。每次调用 RunLoop 的主函数时，只能指定其中一个 Mode，这个Mode被称作 CurrentMode。如果需要切换 Mode，只能退出 Loop，再重新指定一个 Mode 进入。这样做主要是为了分隔开不同组的 Source/Timer/Observer，让其互不影响。</p>
<p><strong>CFRunLoopSourceRef</strong> 是事件产生的地方。Source有两个版本：Source0 和 Source1。</p>
<ul>
<li>Source0 只包含了一个回调（函数指针），它并不能主动触发事件。使用时，你需要先调用 <code>CFRunLoopSourceSignal(source)</code>，将这个 Source 标记为待处理，然后手动调用 <code>CFRunLoopWakeUp(runloop)</code> 来唤醒 RunLoop，让其处理这个事件。</li>
<li>Source1 包含了一个 mach_port 和一个回调（函数指针），被用于通过内核和其他线程相互发送消息。这种 Source 能主动唤醒 RunLoop 的线程，其原理在下面会讲到。</li>
</ul>
<p><strong>CFRunLoopTimerRef</strong> 是基于时间的触发器，它和 NSTimer 是toll-free bridged 的，可以混用。其包含一个时间长度和一个回调（函数指针）。当其加入到 RunLoop 时，RunLoop会注册对应的时间点，当时间点到时，RunLoop会被唤醒以执行那个回调。</p>
<p><strong>CFRunLoopObserverRef</strong> 是观察者，每个 Observer 都包含了一个回调（函数指针），当 RunLoop 的状态发生变化时，观察者就能通过回调接受到这个变化。可以观测的时间点有以下几个：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">typedef CF_OPTIONS(CFOptionFlags, CFRunLoopActivity) &#123;</div><div class="line">    kCFRunLoopEntry         = (1UL &lt;&lt; 0), // 即将进入Loop</div><div class="line">    kCFRunLoopBeforeTimers  = (1UL &lt;&lt; 1), // 即将处理 Timer</div><div class="line">    kCFRunLoopBeforeSources = (1UL &lt;&lt; 2), // 即将处理 Source</div><div class="line">    kCFRunLoopBeforeWaiting = (1UL &lt;&lt; 5), // 即将进入休眠</div><div class="line">    kCFRunLoopAfterWaiting  = (1UL &lt;&lt; 6), // 刚从休眠中唤醒</div><div class="line">    kCFRunLoopExit          = (1UL &lt;&lt; 7), // 即将退出Loop</div><div class="line">&#125;;</div></pre></td></tr></table></figure>
<p>上面的 Source/Timer/Observer 被统称为 mode item，一个 item 可以被同时加入多个 mode。但一个 item 被重复加入同一个 mode 时是不会有效果的。如果一个 mode 中一个 item 都没有，则 RunLoop 会直接退出，不进入循环。</p>
<h3 id="RunLoop-的-Mode"><a href="#RunLoop-的-Mode" class="headerlink" title="RunLoop 的 Mode"></a>RunLoop 的 Mode</h3><p>CFRunLoopMode 和 CFRunLoop 的结构大致如下：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">struct __CFRunLoopMode &#123;</div><div class="line">    CFStringRef _name;            // Mode Name, 例如 @&quot;kCFRunLoopDefaultMode&quot;</div><div class="line">    CFMutableSetRef _sources0;    // Set</div><div class="line">    CFMutableSetRef _sources1;    // Set</div><div class="line">    CFMutableArrayRef _observers; // Array</div><div class="line">    CFMutableArrayRef _timers;    // Array</div><div class="line">    ...</div><div class="line">&#125;;</div><div class="line"></div><div class="line">struct __CFRunLoop &#123;</div><div class="line">    CFMutableSetRef _commonModes;     // Set</div><div class="line">    CFMutableSetRef _commonModeItems; // Set&lt;Source/Observer/Timer&gt;</div><div class="line">    CFRunLoopModeRef _currentMode;    // Current Runloop Mode</div><div class="line">    CFMutableSetRef _modes;           // Set</div><div class="line">    ...</div><div class="line">&#125;;</div></pre></td></tr></table></figure>
<p>这里有个概念叫 “CommonModes”：一个 Mode 可以将自己标记为”Common”属性（通过将其 ModeName 添加到 RunLoop 的 “commonModes” 中）。每当 RunLoop 的内容发生变化时，RunLoop 都会自动将 <code>_commonModeItems</code> 里的 Source/Observer/Timer 同步到具有 “Common” 标记的所有Mode里。</p>
<p>应用场景举例：主线程的 RunLoop 里有两个预置的 Mode：<code>kCFRunLoopDefaultMode</code> 和 <code>UITrackingRunLoopMode</code>。这两个 Mode 都已经被标记为”Common”属性。DefaultMode 是 App 平时所处的状态，<code>TrackingRunLoopMode</code> 是追踪 ScrollView 滑动时的状态。当你创建一个 Timer 并加到 <code>DefaultMode</code> 时，Timer 会得到重复回调，但此时滑动一个TableView时，RunLoop 会将 mode 切换为 <code>TrackingRunLoopMode</code>，这时 Timer 就不会被回调，并且也不会影响到滑动操作。</p>
<p>有时你需要一个 Timer，在两个 Mode 中都能得到回调，一种办法就是将这个 Timer 分别加入这两个 Mode。还有一种方式，就是将 Timer 加入到顶层的 RunLoop 的 “commonModeItems” 中。”commonModeItems” 被 RunLoop 自动更新到所有具有”Common”属性的 Mode 里去。</p>
<p>CFRunLoop对外暴露的管理 Mode 接口只有下面2个:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">CFRunLoopAddCommonMode(CFRunLoopRef runloop, CFStringRef modeName);</div><div class="line">CFRunLoopRunInMode(CFStringRef modeName, ...);</div></pre></td></tr></table></figure>
<p>Mode 暴露的管理 mode item 的接口有下面几个：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">CFRunLoopAddSource(CFRunLoopRef rl, CFRunLoopSourceRef source, CFStringRef modeName);</div><div class="line">CFRunLoopAddObserver(CFRunLoopRef rl, CFRunLoopObserverRef observer, CFStringRef modeName);</div><div class="line">CFRunLoopAddTimer(CFRunLoopRef rl, CFRunLoopTimerRef timer, CFStringRef mode);</div><div class="line">CFRunLoopRemoveSource(CFRunLoopRef rl, CFRunLoopSourceRef source, CFStringRef modeName);</div><div class="line">CFRunLoopRemoveObserver(CFRunLoopRef rl, CFRunLoopObserverRef observer, CFStringRef modeName);</div><div class="line">CFRunLoopRemoveTimer(CFRunLoopRef rl, CFRunLoopTimerRef timer, CFStringRef mode);</div></pre></td></tr></table></figure>
<p>你只能通过 mode name 来操作内部的 mode，当你传入一个新的 mode name 但 RunLoop 内部没有对应 mode 时，RunLoop会自动帮你创建对应的 <code>CFRunLoopModeRef</code>。对于一个 RunLoop 来说，其内部的 mode 只能增加不能删除。</p>
<p>苹果公开提供的 Mode 有两个：<code>kCFRunLoopDefaultMode</code> (<code>NSDefaultRunLoopMode</code>) 和 <code>UITrackingRunLoopMode</code>，你可以用这两个 Mode Name 来操作其对应的 Mode。</p>
<p>同时苹果还提供了一个操作 Common 标记的字符串：<code>kCFRunLoopCommonModes</code> (<code>NSRunLoopCommonModes</code>)，你可以用这个字符串来操作 Common Items，或标记一个 Mode 为 “Common”。使用时注意区分这个字符串和其他 mode name。</p>
<h3 id="RunLoop-的内部逻辑"><a href="#RunLoop-的内部逻辑" class="headerlink" title="RunLoop 的内部逻辑"></a>RunLoop 的内部逻辑</h3><p>根据苹果在<a href="https://developer.apple.com/library/content/documentation/Cocoa/Conceptual/Multithreading/RunLoopManagement/RunLoopManagement.html#//apple_ref/doc/uid/10000057i-CH16-SW23" target="_blank" rel="external">文档</a>里的说明，RunLoop 内部的逻辑大致如下:</p>
<p><img src="http://www.bigliang.com/image/RunLoopTwo.png" alt=""></p>
<p>其内部代码整理如下 （太长了不想看可以直接跳过去，后面会有说明）：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div></pre></td><td class="code"><pre><div class="line">/// 用DefaultMode启动</div><div class="line">void CFRunLoopRun(void) &#123;</div><div class="line">    CFRunLoopRunSpecific(CFRunLoopGetCurrent(), kCFRunLoopDefaultMode, 1.0e10, false);</div><div class="line">&#125;</div><div class="line"> </div><div class="line">/// 用指定的Mode启动，允许设置RunLoop超时时间</div><div class="line">int CFRunLoopRunInMode(CFStringRef modeName, CFTimeInterval seconds, Boolean stopAfterHandle) &#123;</div><div class="line">    return CFRunLoopRunSpecific(CFRunLoopGetCurrent(), modeName, seconds, returnAfterSourceHandled);</div><div class="line">&#125;</div><div class="line"> </div><div class="line">/// RunLoop的实现</div><div class="line">int CFRunLoopRunSpecific(runloop, modeName, seconds, stopAfterHandle) &#123;</div><div class="line">    </div><div class="line">    /// 首先根据modeName找到对应mode</div><div class="line">    CFRunLoopModeRef currentMode = __CFRunLoopFindMode(runloop, modeName, false);</div><div class="line">    /// 如果mode里没有source/timer/observer, 直接返回。</div><div class="line">    if (__CFRunLoopModeIsEmpty(currentMode)) return;</div><div class="line">    </div><div class="line">    /// 1. 通知 Observers: RunLoop 即将进入 loop。</div><div class="line">    __CFRunLoopDoObservers(runloop, currentMode, kCFRunLoopEntry);</div><div class="line">    </div><div class="line">    /// 内部函数，进入loop</div><div class="line">    __CFRunLoopRun(runloop, currentMode, seconds, returnAfterSourceHandled) &#123;</div><div class="line">        </div><div class="line">        Boolean sourceHandledThisLoop = NO;</div><div class="line">        int retVal = 0;</div><div class="line">        do &#123;</div><div class="line"> </div><div class="line">            /// 2. 通知 Observers: RunLoop 即将触发 Timer 回调。</div><div class="line">            __CFRunLoopDoObservers(runloop, currentMode, kCFRunLoopBeforeTimers);</div><div class="line">            /// 3. 通知 Observers: RunLoop 即将触发 Source0 (非port) 回调。</div><div class="line">            __CFRunLoopDoObservers(runloop, currentMode, kCFRunLoopBeforeSources);</div><div class="line">            /// 执行被加入的block</div><div class="line">            __CFRunLoopDoBlocks(runloop, currentMode);</div><div class="line">            </div><div class="line">            /// 4. RunLoop 触发 Source0 (非port) 回调。</div><div class="line">            sourceHandledThisLoop = __CFRunLoopDoSources0(runloop, currentMode, stopAfterHandle);</div><div class="line">            /// 执行被加入的block</div><div class="line">            __CFRunLoopDoBlocks(runloop, currentMode);</div><div class="line"> </div><div class="line">            /// 5. 如果有 Source1 (基于port) 处于 ready 状态，直接处理这个 Source1 然后跳转去处理消息。</div><div class="line">            if (__Source0DidDispatchPortLastTime) &#123;</div><div class="line">                Boolean hasMsg = __CFRunLoopServiceMachPort(dispatchPort, &amp;msg)</div><div class="line">                if (hasMsg) goto handle_msg;</div><div class="line">            &#125;</div><div class="line">            </div><div class="line">            /// 通知 Observers: RunLoop 的线程即将进入休眠(sleep)。</div><div class="line">            if (!sourceHandledThisLoop) &#123;</div><div class="line">                __CFRunLoopDoObservers(runloop, currentMode, kCFRunLoopBeforeWaiting);</div><div class="line">            &#125;</div><div class="line">            </div><div class="line">            /// 7. 调用 mach_msg 等待接受 mach_port 的消息。线程将进入休眠, 直到被下面某一个事件唤醒。</div><div class="line">            /// • 一个基于 port 的Source 的事件。</div><div class="line">            /// • 一个 Timer 到时间了</div><div class="line">            /// • RunLoop 自身的超时时间到了</div><div class="line">            /// • 被其他什么调用者手动唤醒</div><div class="line">            __CFRunLoopServiceMachPort(waitSet, &amp;msg, sizeof(msg_buffer), &amp;livePort) &#123;</div><div class="line">                mach_msg(msg, MACH_RCV_MSG, port); // thread wait for receive msg</div><div class="line">            &#125;</div><div class="line"> </div><div class="line">            /// 8. 通知 Observers: RunLoop 的线程刚刚被唤醒了。</div><div class="line">            __CFRunLoopDoObservers(runloop, currentMode, kCFRunLoopAfterWaiting);</div><div class="line">            </div><div class="line">            /// 收到消息，处理消息。</div><div class="line">            handle_msg:</div><div class="line"> </div><div class="line">            /// 9.1 如果一个 Timer 到时间了，触发这个Timer的回调。</div><div class="line">            if (msg_is_timer) &#123;</div><div class="line">                __CFRunLoopDoTimers(runloop, currentMode, mach_absolute_time())</div><div class="line">            &#125; </div><div class="line"> </div><div class="line">            /// 9.2 如果有dispatch到main_queue的block，执行block。</div><div class="line">            else if (msg_is_dispatch) &#123;</div><div class="line">                __CFRUNLOOP_IS_SERVICING_THE_MAIN_DISPATCH_QUEUE__(msg);</div><div class="line">            &#125; </div><div class="line"> </div><div class="line">            /// 9.3 如果一个 Source1 (基于port) 发出事件了，处理这个事件</div><div class="line">            else &#123;</div><div class="line">                CFRunLoopSourceRef source1 = __CFRunLoopModeFindSourceForMachPort(runloop, currentMode, livePort);</div><div class="line">                sourceHandledThisLoop = __CFRunLoopDoSource1(runloop, currentMode, source1, msg);</div><div class="line">                if (sourceHandledThisLoop) &#123;</div><div class="line">                    mach_msg(reply, MACH_SEND_MSG, reply);</div><div class="line">                &#125;</div><div class="line">            &#125;</div><div class="line">            </div><div class="line">            /// 执行加入到Loop的block</div><div class="line">            __CFRunLoopDoBlocks(runloop, currentMode);</div><div class="line">            </div><div class="line"> </div><div class="line">            if (sourceHandledThisLoop &amp;&amp; stopAfterHandle) &#123;</div><div class="line">                /// 进入loop时参数说处理完事件就返回。</div><div class="line">                retVal = kCFRunLoopRunHandledSource;</div><div class="line">            &#125; else if (timeout) &#123;</div><div class="line">                /// 超出传入参数标记的超时时间了</div><div class="line">                retVal = kCFRunLoopRunTimedOut;</div><div class="line">            &#125; else if (__CFRunLoopIsStopped(runloop)) &#123;</div><div class="line">                /// 被外部调用者强制停止了</div><div class="line">                retVal = kCFRunLoopRunStopped;</div><div class="line">            &#125; else if (__CFRunLoopModeIsEmpty(runloop, currentMode)) &#123;</div><div class="line">                /// source/timer/observer一个都没有了</div><div class="line">                retVal = kCFRunLoopRunFinished;</div><div class="line">            &#125;</div><div class="line">            </div><div class="line">            /// 如果没超时，mode里没空，loop也没被停止，那继续loop。</div><div class="line">        &#125; while (retVal == 0);</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    /// 10. 通知 Observers: RunLoop 即将退出。</div><div class="line">    __CFRunLoopDoObservers(rl, currentMode, kCFRunLoopExit);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>可以看到，实际上 RunLoop 就是这样一个函数，其内部是一个 do-while 循环。当你调用 <code>CFRunLoopRun()</code> 时，线程就会一直停留在这个循环里；直到超时或被手动停止，该函数才会返回。</p>
<h3 id="RunLoop-的底层实现"><a href="#RunLoop-的底层实现" class="headerlink" title="RunLoop 的底层实现"></a>RunLoop 的底层实现</h3><p>从上面代码可以看到，RunLoop 的核心是基于 mach port 的，其进入休眠时调用的函数是 <code>mach_msg()</code>。为了解释这个逻辑，下面稍微介绍一下 OSX/iOS 的系统架构。</p>
<p><img src="http://www.bigliang.com/image/RunLoopThree.png" alt=""></p>
<p>苹果官方将整个系统大致划分为上述4个层次：</p>
<ul>
<li>应用层包括用户能接触到的图形应用，例如 Spotlight、Aqua、SpringBoard 等。</li>
<li>应用框架层即开发人员接触到的 Cocoa 等框架。</li>
<li>核心框架层包括各种核心框架、OpenGL 等内容。</li>
<li>Darwin 即操作系统的核心，包括系统内核、驱动、Shell 等内容，这一层是开源的，其所有源码都可以在 <a href="https://opensource.apple.com/" target="_blank" rel="external">opensource.apple.com</a> 里找到。</li>
</ul>
<p>我们在深入看一下 Darwin 这个核心的架构：</p>
<p><img src="http://www.bigliang.com/image/RunLoopFour.png" alt=""></p>
<p>其中，在硬件层上面的三个组成部分：Mach、BSD、IOKit (还包括一些上面没标注的内容)，共同组成了 XNU 内核。</p>
<p>XNU 内核的内环被称作 Mach，其作为一个微内核，仅提供了诸如处理器调度、IPC (进程间通信)等非常少量的基础服务。</p>
<p>BSD 层可以看作围绕 Mach 层的一个外环，其提供了诸如进程管理、文件系统和网络等功能。</p>
<p>IOKit 层是为设备驱动提供了一个面向对象(C++)的一个框架。</p>
<p>Mach 本身提供的 API 非常有限，而且苹果也不鼓励使用 Mach 的 API，但是这些API非常基础，如果没有这些API的话，其他任何工作都无法实施。在 Mach 中，所有的东西都是通过自己的对象实现的，进程、线程和虚拟内存都被称为”对象”。和其他架构不同， Mach 的对象间不能直接调用，只能通过消息传递的方式实现对象间的通信。”消息”是 Mach 中最基础的概念，消息在两个端口 (port) 之间传递，这就是 Mach 的 IPC (进程间通信) 的核心。</p>
<p>Mach 的消息定义是在 <mach message.h=""> 头文件的，很简单：</mach></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">typedef struct &#123;</div><div class="line">  mach_msg_header_t header;</div><div class="line">  mach_msg_body_t body;</div><div class="line">&#125; mach_msg_base_t;</div><div class="line"> </div><div class="line">typedef struct &#123;</div><div class="line">  mach_msg_bits_t msgh_bits;</div><div class="line">  mach_msg_size_t msgh_size;</div><div class="line">  mach_port_t msgh_remote_port;</div><div class="line">  mach_port_t msgh_local_port;</div><div class="line">  mach_port_name_t msgh_voucher_port;</div><div class="line">  mach_msg_id_t msgh_id;</div><div class="line">&#125; mach_msg_header_t;</div></pre></td></tr></table></figure>
<p>一条 Mach 消息实际上就是一个二进制数据包 (BLOB)，其头部定义了当前端口 <code>local_port</code> 和目标端口 <code>remote_port</code>，发送和接受消息是通过同一个 API 进行的，其 option 标记了消息传递的方向：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">mach_msg_return_t mach_msg(</div><div class="line">			mach_msg_header_t *msg,</div><div class="line">			mach_msg_option_t option,</div><div class="line">			mach_msg_size_t send_size,</div><div class="line">			mach_msg_size_t rcv_size,</div><div class="line">			mach_port_name_t rcv_name,</div><div class="line">			mach_msg_timeout_t timeout,</div><div class="line">			mach_port_name_t notify</div><div class="line">			);</div></pre></td></tr></table></figure>
<p>为了实现消息的发送和接收，<code>mach_msg()</code> 函数实际上是调用了一个 Mach 陷阱 (trap)，即函数 <code>mach_msg_trap()</code> ，陷阱这个概念在 Mach 中等同于系统调用。当你在用户态调用 <code>mach_msg_trap()</code> 时会触发陷阱机制，切换到内核态；内核态中内核实现的 <code>mach_msg()</code> 函数会完成实际的工作，如下图：</p>
<p><img src="http://www.bigliang.com/image/RunLoopFive.png" alt=""></p>
<p>这些概念可以参考维基百科: <a href="https://en.wikipedia.org/wiki/System_call" target="_blank" rel="external">System_call</a>、<a href="https://en.wikipedia.org/wiki/Trap_(computing" target="_blank" rel="external">Trap_(computing)</a>)。</p>
<p>RunLoop 的核心就是一个 <code>mach_msg()</code> (见上面代码的第7步)，RunLoop 调用这个函数去接收消息，如果没有别人发送 port 消息过来，内核会将线程置于等待状态。例如你在模拟器里跑起一个 iOS 的 App，然后在 App 静止时点击暂停，你会看到主线程调用栈是停留在 <code>mach_msg_trap()</code> 这个地方。</p>
<p>关于具体的如何利用 mach port 发送信息，可以看看 <a href="http://nshipster.com/inter-process-communication/" target="_blank" rel="external">NSHipster</a> 这一篇文章，或者<a href="https://segmentfault.com/a/1190000002400329" target="_blank" rel="external">这里</a>的中文翻译 。</p>
<p>关于Mach的历史可以看看这篇很有趣的文章：<a href="https://news.cnblogs.com/n/114742/" target="_blank" rel="external">Mac OS X 背后的故事（三）Mach 之父 Avie Tevanian。</a></p>
<h3 id="苹果用-RunLoop-实现的功能"><a href="#苹果用-RunLoop-实现的功能" class="headerlink" title="苹果用 RunLoop 实现的功能"></a>苹果用 RunLoop 实现的功能</h3><p>首先我们可以看一下 App 启动后 RunLoop 的状态：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div></pre></td><td class="code"><pre><div class="line">CFRunLoop &#123;</div><div class="line">    current mode = kCFRunLoopDefaultMode</div><div class="line">    common modes = &#123;</div><div class="line">        UITrackingRunLoopMode</div><div class="line">        kCFRunLoopDefaultMode</div><div class="line">    &#125;</div><div class="line"> </div><div class="line">    common mode items = &#123;</div><div class="line"> </div><div class="line">        // source0 (manual)</div><div class="line">        CFRunLoopSource &#123;order =-1, &#123;</div><div class="line">            callout = _UIApplicationHandleEventQueue&#125;&#125;</div><div class="line">        CFRunLoopSource &#123;order =-1, &#123;</div><div class="line">            callout = PurpleEventSignalCallback &#125;&#125;</div><div class="line">        CFRunLoopSource &#123;order = 0, &#123;</div><div class="line">            callout = FBSSerialQueueRunLoopSourceHandler&#125;&#125;</div><div class="line"> </div><div class="line">        // source1 (mach port)</div><div class="line">        CFRunLoopSource &#123;order = 0,  &#123;port = 17923&#125;&#125;</div><div class="line">        CFRunLoopSource &#123;order = 0,  &#123;port = 12039&#125;&#125;</div><div class="line">        CFRunLoopSource &#123;order = 0,  &#123;port = 16647&#125;&#125;</div><div class="line">        CFRunLoopSource &#123;order =-1, &#123;</div><div class="line">            callout = PurpleEventCallback&#125;&#125;</div><div class="line">        CFRunLoopSource &#123;order = 0, &#123;port = 2407,</div><div class="line">            callout = _ZL20notify_port_callbackP12__CFMachPortPvlS1_&#125;&#125;</div><div class="line">        CFRunLoopSource &#123;order = 0, &#123;port = 1c03,</div><div class="line">            callout = __IOHIDEventSystemClientAvailabilityCallback&#125;&#125;</div><div class="line">        CFRunLoopSource &#123;order = 0, &#123;port = 1b03,</div><div class="line">            callout = __IOHIDEventSystemClientQueueCallback&#125;&#125;</div><div class="line">        CFRunLoopSource &#123;order = 1, &#123;port = 1903,</div><div class="line">            callout = __IOMIGMachPortPortCallback&#125;&#125;</div><div class="line"> </div><div class="line">        // Ovserver</div><div class="line">        CFRunLoopObserver &#123;order = -2147483647, activities = 0x1, // Entry</div><div class="line">            callout = _wrapRunLoopWithAutoreleasePoolHandler&#125;</div><div class="line">        CFRunLoopObserver &#123;order = 0, activities = 0x20,          // BeforeWaiting</div><div class="line">            callout = _UIGestureRecognizerUpdateObserver&#125;</div><div class="line">        CFRunLoopObserver &#123;order = 1999000, activities = 0xa0,    // BeforeWaiting | Exit</div><div class="line">            callout = _afterCACommitHandler&#125;</div><div class="line">        CFRunLoopObserver &#123;order = 2000000, activities = 0xa0,    // BeforeWaiting | Exit</div><div class="line">            callout = _ZN2CA11Transaction17observer_callbackEP19__CFRunLoopObservermPv&#125;</div><div class="line">        CFRunLoopObserver &#123;order = 2147483647, activities = 0xa0, // BeforeWaiting | Exit</div><div class="line">            callout = _wrapRunLoopWithAutoreleasePoolHandler&#125;</div><div class="line"> </div><div class="line">        // Timer</div><div class="line">        CFRunLoopTimer &#123;firing = No, interval = 3.1536e+09, tolerance = 0,</div><div class="line">            next fire date = 453098071 (-4421.76019 @ 96223387169499),</div><div class="line">            callout = _ZN2CAL14timer_callbackEP16__CFRunLoopTimerPv (QuartzCore.framework)&#125;</div><div class="line">    &#125;,</div><div class="line"> </div><div class="line">    modes ＝ &#123;</div><div class="line">        CFRunLoopMode  &#123;</div><div class="line">            sources0 =  &#123; /* same as &apos;common mode items&apos; */ &#125;,</div><div class="line">            sources1 =  &#123; /* same as &apos;common mode items&apos; */ &#125;,</div><div class="line">            observers = &#123; /* same as &apos;common mode items&apos; */ &#125;,</div><div class="line">            timers =    &#123; /* same as &apos;common mode items&apos; */ &#125;,</div><div class="line">        &#125;,</div><div class="line"> </div><div class="line">        CFRunLoopMode  &#123;</div><div class="line">            sources0 =  &#123; /* same as &apos;common mode items&apos; */ &#125;,</div><div class="line">            sources1 =  &#123; /* same as &apos;common mode items&apos; */ &#125;,</div><div class="line">            observers = &#123; /* same as &apos;common mode items&apos; */ &#125;,</div><div class="line">            timers =    &#123; /* same as &apos;common mode items&apos; */ &#125;,</div><div class="line">        &#125;,</div><div class="line"> </div><div class="line">        CFRunLoopMode  &#123;</div><div class="line">            sources0 = &#123;</div><div class="line">                CFRunLoopSource &#123;order = 0, &#123;</div><div class="line">                    callout = FBSSerialQueueRunLoopSourceHandler&#125;&#125;</div><div class="line">            &#125;,</div><div class="line">            sources1 = (null),</div><div class="line">            observers = &#123;</div><div class="line">                CFRunLoopObserver &gt;&#123;activities = 0xa0, order = 2000000,</div><div class="line">                    callout = _ZN2CA11Transaction17observer_callbackEP19__CFRunLoopObservermPv&#125;</div><div class="line">            )&#125;,</div><div class="line">            timers = (null),</div><div class="line">        &#125;,</div><div class="line"> </div><div class="line">        CFRunLoopMode  &#123;</div><div class="line">            sources0 = &#123;</div><div class="line">                CFRunLoopSource &#123;order = -1, &#123;</div><div class="line">                    callout = PurpleEventSignalCallback&#125;&#125;</div><div class="line">            &#125;,</div><div class="line">            sources1 = &#123;</div><div class="line">                CFRunLoopSource &#123;order = -1, &#123;</div><div class="line">                    callout = PurpleEventCallback&#125;&#125;</div><div class="line">            &#125;,</div><div class="line">            observers = (null),</div><div class="line">            timers = (null),</div><div class="line">        &#125;,</div><div class="line">        </div><div class="line">        CFRunLoopMode  &#123;</div><div class="line">            sources0 = (null),</div><div class="line">            sources1 = (null),</div><div class="line">            observers = (null),</div><div class="line">            timers = (null),</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>可以看到，系统默认注册了5个Mode:</p>
<ul>
<li>kCFRunLoopDefaultMode: App的默认 Mode，通常主线程是在这个 Mode 下运行的。</li>
<li>UITrackingRunLoopMode: 界面跟踪 Mode，用于 ScrollView 追踪触摸滑动，保证界面滑动时不受其他 Mode 影响。</li>
<li>UIInitializationRunLoopMode: 在刚启动 App 时第进入的第一个 Mode，启动完成后就不再使用。</li>
<li>GSEventReceiveRunLoopMode: 接受系统事件的内部 Mode，通常用不到。</li>
<li>kCFRunLoopCommonModes: 这是一个占位的 Mode，没有实际作用。</li>
</ul>
<p>你可以在<a href="http://iphonedevwiki.net/index.php/CFRunLoop" target="_blank" rel="external">这里</a>看到更多的苹果内部的 Mode，但那些 Mode 在开发中就很难遇到了。</p>
<p>当 RunLoop 进行回调时，一般都是通过一个很长的函数调用出去 (call out), 当你在你的代码中下断点调试时，通常能在调用栈上看到这些函数。下面是这几个函数的整理版本，如果你在调用栈中看到这些长函数名，在这里查找一下就能定位到具体的调用地点了：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div></pre></td><td class="code"><pre><div class="line">&#123;</div><div class="line">    /// 1. 通知Observers，即将进入RunLoop</div><div class="line">    /// 此处有Observer会创建AutoreleasePool: _objc_autoreleasePoolPush();</div><div class="line">    __CFRUNLOOP_IS_CALLING_OUT_TO_AN_OBSERVER_CALLBACK_FUNCTION__(kCFRunLoopEntry);</div><div class="line">    do &#123;</div><div class="line"> </div><div class="line">        /// 2. 通知 Observers: 即将触发 Timer 回调。</div><div class="line">        __CFRUNLOOP_IS_CALLING_OUT_TO_AN_OBSERVER_CALLBACK_FUNCTION__(kCFRunLoopBeforeTimers);</div><div class="line">        /// 3. 通知 Observers: 即将触发 Source (非基于port的,Source0) 回调。</div><div class="line">        __CFRUNLOOP_IS_CALLING_OUT_TO_AN_OBSERVER_CALLBACK_FUNCTION__(kCFRunLoopBeforeSources);</div><div class="line">        __CFRUNLOOP_IS_CALLING_OUT_TO_A_BLOCK__(block);</div><div class="line"> </div><div class="line">        /// 4. 触发 Source0 (非基于port的) 回调。</div><div class="line">        __CFRUNLOOP_IS_CALLING_OUT_TO_A_SOURCE0_PERFORM_FUNCTION__(source0);</div><div class="line">        __CFRUNLOOP_IS_CALLING_OUT_TO_A_BLOCK__(block);</div><div class="line"> </div><div class="line">        /// 6. 通知Observers，即将进入休眠</div><div class="line">        /// 此处有Observer释放并新建AutoreleasePool: _objc_autoreleasePoolPop(); _objc_autoreleasePoolPush();</div><div class="line">        __CFRUNLOOP_IS_CALLING_OUT_TO_AN_OBSERVER_CALLBACK_FUNCTION__(kCFRunLoopBeforeWaiting);</div><div class="line"> </div><div class="line">        /// 7. sleep to wait msg.</div><div class="line">        mach_msg() -&gt; mach_msg_trap();</div><div class="line">        </div><div class="line"> </div><div class="line">        /// 8. 通知Observers，线程被唤醒</div><div class="line">        __CFRUNLOOP_IS_CALLING_OUT_TO_AN_OBSERVER_CALLBACK_FUNCTION__(kCFRunLoopAfterWaiting);</div><div class="line"> </div><div class="line">        /// 9. 如果是被Timer唤醒的，回调Timer</div><div class="line">        __CFRUNLOOP_IS_CALLING_OUT_TO_A_TIMER_CALLBACK_FUNCTION__(timer);</div><div class="line"> </div><div class="line">        /// 9. 如果是被dispatch唤醒的，执行所有调用 dispatch_async 等方法放入main queue 的 block</div><div class="line">        __CFRUNLOOP_IS_SERVICING_THE_MAIN_DISPATCH_QUEUE__(dispatched_block);</div><div class="line"> </div><div class="line">        /// 9. 如果如果Runloop是被 Source1 (基于port的) 的事件唤醒了，处理这个事件</div><div class="line">        __CFRUNLOOP_IS_CALLING_OUT_TO_A_SOURCE1_PERFORM_FUNCTION__(source1);</div><div class="line"> </div><div class="line"> </div><div class="line">    &#125; while (...);</div><div class="line"> </div><div class="line">    /// 10. 通知Observers，即将退出RunLoop</div><div class="line">    /// 此处有Observer释放AutoreleasePool: _objc_autoreleasePoolPop();</div><div class="line">    __CFRUNLOOP_IS_CALLING_OUT_TO_AN_OBSERVER_CALLBACK_FUNCTION__(kCFRunLoopExit);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h4 id="AutoreleasePool"><a href="#AutoreleasePool" class="headerlink" title="AutoreleasePool"></a>AutoreleasePool</h4><p>App启动后，苹果在主线程 RunLoop 里注册了两个 Observer，其回调都是 <code>_wrapRunLoopWithAutoreleasePoolHandler()</code>。</p>
<p>第一个 Observer 监视的事件是 Entry(即将进入Loop)，其回调内会调用 <code>_objc_autoreleasePoolPush()</code> 创建自动释放池。其 order 是-2147483647，优先级最高，保证创建释放池发生在其他所有回调之前。</p>
<p>第二个 Observer 监视了两个事件： BeforeWaiting(准备进入休眠) 时调用<code>_objc_autoreleasePoolPop()</code> 和 <code>_objc_autoreleasePoolPush()</code> 释放旧的池并创建新池；Exit(即将退出Loop) 时调用 <code>_objc_autoreleasePoolPop()</code> 来释放自动释放池。这个 Observer 的 order 是 2147483647，优先级最低，保证其释放池子发生在其他所有回调之后。</p>
<p>在主线程执行的代码，通常是写在诸如事件回调、Timer回调内的。这些回调会被 RunLoop 创建好的 AutoreleasePool 环绕着，所以不会出现内存泄漏，开发者也不必显示创建 Pool 了。</p>
<h4 id="事件响应"><a href="#事件响应" class="headerlink" title="事件响应"></a>事件响应</h4><p>苹果注册了一个 Source1 (基于 mach port 的) 用来接收系统事件，其回调函数为 <code>__IOHIDEventSystemClientQueueCallback()</code>。</p>
<p>当一个硬件事件(触摸/锁屏/摇晃等)发生后，首先由 IOKit.framework 生成一个 IOHIDEvent 事件并由 SpringBoard 接收。这个过程的详细情况可以参考<a href="http://iphonedevwiki.net/index.php/IOHIDFamily" target="_blank" rel="external">这里</a>。SpringBoard 只接收按键(锁屏/静音等)，触摸，加速，接近传感器等几种 Event，随后用 mach port 转发给需要的App进程。随后苹果注册的那个 Source1 就会触发回调，并调用 <code>_UIApplicationHandleEventQueue()</code> 进行应用内部的分发。</p>
<p><code>_UIApplicationHandleEventQueue()</code> 会把 IOHIDEvent 处理并包装成 UIEvent 进行处理或分发，其中包括识别 UIGesture/处理屏幕旋转/发送给 UIWindow 等。通常事件比如 UIButton 点击、touchesBegin/Move/End/Cancel 事件都是在这个回调中完成的。</p>
<h4 id="手势识别"><a href="#手势识别" class="headerlink" title="手势识别"></a>手势识别</h4><p>当上面的 <code>_UIApplicationHandleEventQueue()</code> 识别了一个手势时，其首先会调用 Cancel 将当前的 touchesBegin/Move/End 系列回调打断。随后系统将对应的 UIGestureRecognizer 标记为待处理。</p>
<p>苹果注册了一个 Observer 监测 BeforeWaiting (Loop即将进入休眠) 事件，这个Observer的回调函数是 <code>_UIGestureRecognizerUpdateObserver()</code>，其内部会获取所有刚被标记为待处理的 GestureRecognizer，并执行GestureRecognizer的回调。</p>
<p>当有 UIGestureRecognizer 的变化(创建/销毁/状态改变)时，这个回调都会进行相应处理。</p>
<h4 id="界面更新"><a href="#界面更新" class="headerlink" title="界面更新"></a>界面更新</h4><p>当在操作 UI 时，比如改变了 Frame、更新了 UIView/CALayer 的层次时，或者手动调用了 UIView/CALayer 的 <code>setNeedsLayout</code>/<code>setNeedsDisplay</code>方法后，这个 UIView/CALayer 就被标记为待处理，并被提交到一个全局的容器去。</p>
<p>苹果注册了一个 Observer 监听 BeforeWaiting(即将进入休眠) 和 Exit (即将退出Loop) 事件，回调去执行一个很长的函数：<br><code>_ZN2CA11Transaction17observer_callbackEP19__CFRunLoopObservermPv()</code>。这个函数里会遍历所有待处理的 UIView/CAlayer 以执行实际的绘制和调整，并更新 UI 界面。</p>
<p>这个函数内部的调用栈大概是这样的：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">_ZN2CA11Transaction17observer_callbackEP19__CFRunLoopObservermPv()</div><div class="line">    QuartzCore:CA::Transaction::observer_callback:</div><div class="line">        CA::Transaction::commit();</div><div class="line">            CA::Context::commit_transaction();</div><div class="line">                CA::Layer::layout_and_display_if_needed();</div><div class="line">                    CA::Layer::layout_if_needed();</div><div class="line">                        [CALayer layoutSublayers];</div><div class="line">                            [UIView layoutSubviews];</div><div class="line">                    CA::Layer::display_if_needed();</div><div class="line">                        [CALayer display];</div><div class="line">                            [UIView drawRect];</div></pre></td></tr></table></figure>
<h4 id="定时器"><a href="#定时器" class="headerlink" title="定时器"></a>定时器</h4><p>NSTimer 其实就是 <code>CFRunLoopTimerRef</code>，他们之间是 toll-free bridged 的。一个 NSTimer 注册到 RunLoop 后，RunLoop 会为其重复的时间点注册好事件。例如 10:00, 10:10, 10:20 这几个时间点。RunLoop为了节省资源，并不会在非常准确的时间点回调这个Timer。Timer 有个属性叫做 Tolerance (宽容度)，标示了当时间点到后，容许有多少最大误差。</p>
<p>如果某个时间点被错过了，例如执行了一个很长的任务，则那个时间点的回调也会跳过去，不会延后执行。就比如等公交，如果 10:10 时我忙着玩手机错过了那个点的公交，那我只能等 10:20 这一趟了。</p>
<p>CADisplayLink 是一个和屏幕刷新率一致的定时器（但实际实现原理更复杂，和 NSTimer 并不一样，其内部实际是操作了一个 Source）。如果在两次屏幕刷新之间执行了一个长任务，那其中就会有一帧被跳过去（和 NSTimer 相似），造成界面卡顿的感觉。在快速滑动TableView时，即使一帧的卡顿也会让用户有所察觉。Facebook 开源的 AsyncDisplayLink 就是为了解决界面卡顿的问题，其内部也用到了 RunLoop，这个稍后我会再单独写一页博客来分析。</p>
<h4 id="PerformSelecter"><a href="#PerformSelecter" class="headerlink" title="PerformSelecter"></a>PerformSelecter</h4><p>当调用 NSObject 的 <code>performSelecter:afterDelay:</code> 后，实际上其内部会创建一个 Timer 并添加到当前线程的 RunLoop 中。所以如果当前线程没有 RunLoop，则这个方法会失效。</p>
<p>当调用 <code>performSelector:onThread:</code> 时，实际上其会创建一个 Timer 加到对应的线程去，同样的，如果对应线程没有 RunLoop 该方法也会失效。</p>
<h4 id="关于GCD"><a href="#关于GCD" class="headerlink" title="关于GCD"></a>关于GCD</h4><p>实际上 RunLoop 底层也会用到 GCD 的东西，<del>比如 RunLoop 是用 dispatch_source_t 实现的 Timer</del>（评论中有人提醒，NSTimer 是用了 XNU 内核的 mk_timer，我也仔细调试了一下，发现 NSTimer 确实是由 mk_timer 驱动，而非 GCD 驱动的）。但同时 GCD 提供的某些接口也用到了 RunLoop， 例如 <code>dispatch_async()</code>。</p>
<p>当调用 <code>dispatch_async(dispatch_get_main_queue(), block)</code> 时，libDispatch 会向主线程的 RunLoop 发送消息，RunLoop会被唤醒，并从消息中取得这个 <code>block</code>，并在回调 <code>__CFRUNLOOP_IS_SERVICING_THE_MAIN_DISPATCH_QUEUE__()</code> 里执行这个 <code>block</code>。但这个逻辑仅限于 dispatch 到主线程，dispatch 到其他线程仍然是由 libDispatch 处理的。</p>
<h4 id="关于网络请求"><a href="#关于网络请求" class="headerlink" title="关于网络请求"></a>关于网络请求</h4><p>iOS 中，关于网络请求的接口自下至上有如下几层:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">CFSocket</div><div class="line">CFNetwork       -&gt;ASIHttpRequest</div><div class="line">NSURLConnection -&gt;AFNetworking</div><div class="line">NSURLSession    -&gt;AFNetworking2, Alamofire</div></pre></td></tr></table></figure>
<ul>
<li>CFSocket 是最底层的接口，只负责 socket 通信。</li>
<li>CFNetwork 是基于 CFSocket 等接口的上层封装，ASIHttpRequest 工作于这一层。</li>
<li>NSURLConnection 是基于 CFNetwork 的更高层的封装，提供面向对象的接口，AFNetworking 工作于这一层。</li>
<li>NSURLSession 是 iOS7 中新增的接口，表面上是和 NSURLConnection 并列的，但底层仍然用到了 NSURLConnection 的部分功能 (比如 com.apple.NSURLConnectionLoader 线程)，AFNetworking2 和 Alamofire 工作于这一层。</li>
</ul>
<p>下面主要介绍下 NSURLConnection 的工作过程。</p>
<p>通常使用 NSURLConnection 时，你会传入一个 <code>Delegate</code>，当调用了 <code>[connection start]</code> 后，这个 <code>Delegate</code> 就会不停收到事件回调。实际上，<code>start</code> 这个函数的内部会会获取 <code>CurrentRunLoop</code>，然后在其中的 <code>DefaultMode</code> 添加了4个 Source0 (即需要手动触发的Source)。<code>CFMultiplexerSource</code> 是负责各种 <code>Delegate</code> 回调的，<code>CFHTTPCookieStorage</code> 是处理各种 <code>Cookie</code> 的。</p>
<p>当开始网络传输时，我们可以看到 NSURLConnection 创建了两个新线程：<code>com.apple.NSURLConnectionLoader</code> 和 <code>com.apple.CFSocket.private</code>。其中 <code>CFSocket</code> 线程是处理底层 <code>socket</code> 连接的。<code>NSURLConnectionLoader</code> 这个线程内部会使用 RunLoop 来接收底层 <code>socket</code> 的事件，并通过之前添加的 Source0 通知到上层的 <code>Delegate</code>。</p>
<p><img src="http://www.bigliang.com/image/RunLoopSix.png" alt=""></p>
<p><code>NSURLConnectionLoader</code> 中的 RunLoop 通过一些基于 <code>mach port</code> 的 Source 接收来自底层 <code>CFSocket</code> 的通知。当收到通知后，其会在合适的时机向 <code>CFMultiplexerSource</code> 等 Source0 发送通知，同时唤醒 <code>Delegate</code> 线程的 RunLoop 来让其处理这些通知。<code>CFMultiplexerSource</code> 会在 <code>Delegate</code> 线程的 RunLoop 对 <code>Delegate</code> 执行实际的回调。</p>
<h3 id="RunLoop-的实际应用举例"><a href="#RunLoop-的实际应用举例" class="headerlink" title="RunLoop 的实际应用举例"></a>RunLoop 的实际应用举例</h3><h4 id="AFNetworking"><a href="#AFNetworking" class="headerlink" title="AFNetworking"></a>AFNetworking</h4><p><code>AFURLConnectionOperation</code> 这个类是基于 <code>NSURLConnection</code> 构建的，其希望能在后台线程接收 <code>Delegate</code> 回调。为此 <code>AFNetworking</code> 单独创建了一个线程，并在这个线程中启动了一个 RunLoop：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line">+ (void)networkRequestThreadEntryPoint:(id)__unused object &#123;</div><div class="line">    @autoreleasepool &#123;</div><div class="line">        [[NSThread currentThread] setName:@&quot;AFNetworking&quot;];</div><div class="line">        NSRunLoop *runLoop = [NSRunLoop currentRunLoop];</div><div class="line">        [runLoop addPort:[NSMachPort port] forMode:NSDefaultRunLoopMode];</div><div class="line">        [runLoop run];</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"> </div><div class="line">+ (NSThread *)networkRequestThread &#123;</div><div class="line">    static NSThread *_networkRequestThread = nil;</div><div class="line">    static dispatch_once_t oncePredicate;</div><div class="line">    dispatch_once(&amp;oncePredicate, ^&#123;</div><div class="line">        _networkRequestThread = [[NSThread alloc] initWithTarget:self selector:@selector(networkRequestThreadEntryPoint:) object:nil];</div><div class="line">        [_networkRequestThread start];</div><div class="line">    &#125;);</div><div class="line">    return _networkRequestThread;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>RunLoop 启动前内部必须要有至少一个 Timer/Observer/Source，所以 <code>AFNetworking</code> 在 <code>[runLoop run]</code> 之前先创建了一个新的 <code>NSMachPort</code> 添加进去了。通常情况下，调用者需要持有这个 <code>NSMachPort</code> (<code>mach_port</code>) 并在外部线程通过这个 <code>port</code> 发送消息到 <code>loop</code> 内；但此处添加 <code>port</code> 只是为了让 RunLoop 不至于退出，并没有用于实际的发送消息。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">- (void)start &#123;</div><div class="line">    [self.lock lock];</div><div class="line">    if ([self isCancelled]) &#123;</div><div class="line">        [self performSelector:@selector(cancelConnection) onThread:[[self class] networkRequestThread] withObject:nil waitUntilDone:NO modes:[self.runLoopModes allObjects]];</div><div class="line">    &#125; else if ([self isReady]) &#123;</div><div class="line">        self.state = AFOperationExecutingState;</div><div class="line">        [self performSelector:@selector(operationDidStart) onThread:[[self class] networkRequestThread] withObject:nil waitUntilDone:NO modes:[self.runLoopModes allObjects]];</div><div class="line">    &#125;</div><div class="line">    [self.lock unlock];</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>当需要这个后台线程执行任务时，<code>AFNetworking</code> 通过调用 <code>[NSObject performSelector:onThread:..]</code> 将这个任务扔到了后台线程的 RunLoop 中。</p>
<h4 id="AsyncDisplayKit"><a href="#AsyncDisplayKit" class="headerlink" title="AsyncDisplayKit"></a>AsyncDisplayKit</h4><p><a href="https://github.com/facebook/AsyncDisplayKit" target="_blank" rel="external">AsyncDisplayKit</a> 是 Facebook 推出的用于保持界面流畅性的框架，其原理大致如下：</p>
<p>UI 线程中一旦出现繁重的任务就会导致界面卡顿，这类任务通常分为3类：排版，绘制，UI对象操作。</p>
<p>排版通常包括计算视图大小、计算文本高度、重新计算子式图的排版等操作。<br>绘制一般有文本绘制 (例如 CoreText)、图片绘制 (例如预先解压)、元素绘制 (Quartz)等操作。<br>UI对象操作通常包括 UIView/CALayer 等 UI 对象的创建、设置属性和销毁。</p>
<p>其中前两类操作可以通过各种方法扔到后台线程执行，而最后一类操作只能在主线程完成，并且有时后面的操作需要依赖前面操作的结果 （例如 <code>TextView</code> 创建时可能需要提前计算出文本的大小）。ASDK 所做的，就是尽量将能放入后台的任务放入后台，不能的则尽量推迟 (例如视图的创建、属性的调整)。</p>
<p>为此，ASDK 创建了一个名为 <code>ASDisplayNode</code> 的对象，并在内部封装了 UIView/CALayer，它具有和 UIView/CALayer 相似的属性，例如 <code>frame</code>、<code>backgroundColor</code>等。所有这些属性都可以在后台线程更改，开发者可以只通过 Node 来操作其内部的 UIView/CALayer，这样就可以将排版和绘制放入了后台线程。但是无论怎么操作，这些属性总需要在某个时刻同步到主线程的 UIView/CALayer 去。</p>
<p>ASDK 仿照 QuartzCore/UIKit 框架的模式，实现了一套类似的界面更新的机制：即在主线程的 RunLoop 中添加一个 Observer，监听了 <code>kCFRunLoopBeforeWaiting</code> 和 <code>kCFRunLoopExit</code> 事件，在收到回调时，遍历所有之前放入队列的待处理的任务，然后一一执行。<br>具体的代码可以看这里：<a href="https://github.com/facebook/AsyncDisplayKit/blob/master/AsyncDisplayKit%2FDetails%2FTransactions%2F_ASAsyncTransactionGroup.m" target="_blank" rel="external">_ASAsyncTransactionGroup。</a></p>
<p>原文出处：<a href="http://blog.ibireme.com/2015/05/18/runloop/#ui" target="_blank" rel="external">ibireme 深入理解RunLoop</a></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[multipart/form-data方式的多图片上传]]></title>
      <url>http://www.bigliang.com/2016/12/08/multipart-form-data%E6%96%B9%E5%BC%8F%E7%9A%84%E5%A4%9A%E5%9B%BE%E7%89%87%E4%B8%8A%E4%BC%A0/</url>
      <content type="html"><![CDATA[<p>多图片上传<a id="more"></a></p>
<h2 id="multipart-form-data请求"><a href="#multipart-form-data请求" class="headerlink" title="multipart/form-data请求"></a>multipart/form-data请求</h2><p>http协议本身的原始方法不支持multipart/form-data请求，那这个请求自然就是由这些原始的方法演变而来的，具体如何演变且看下文：</p>
<ul>
<li><p>1、multipart/form-data的基础方法是post，也就是说是由post方法来组合实现的</p>
</li>
<li><p>2、multipart/form-data与post方法的不同之处：请求头，请求体。</p>
</li>
<li><p>3、multipart/form-data的请求头必须包含一个特殊的头信息：Content-Type，且其值也必须规定为multipart/form-data，同时还需要规定一个内容分割符用于分割请求体中的多个post的内容，如文件内容和文本内容自然需要分割开来，不然接收方就无法正常解析和还原这个文件了。具体的头信息如下：</p>
  <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">Content-Type: multipart/form-data; boundary=$&#123;bound&#125;</div></pre></td></tr></table></figure>
<p>  ${bound} 是一个占位符，代表我们规定的分割符，可以自己任意规定，但为了避免和正常文本重复了，尽量要使用复杂一点的内容，iOS开发可以使用UUID。</p>
</li>
<li><p>4、multipart/form-data的请求体也是一个字符串，不过和post的请求体不同的是它的构造方式，post是简单的name=value值连接，而multipart/form-data则是添加了分隔符等内容的构造体。具体格式如下:</p>
  <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">--5CEDCCFA-7F63-4C2D-A3F5-02BD9D42DA80</div><div class="line">Content-Disposition: form-data; name=&quot;HouseId&quot;</div><div class="line"></div><div class="line">1886790</div><div class="line">--5CEDCCFA-7F63-4C2D-A3F5-02BD9D42DA80</div><div class="line">Content-Disposition: form-data; name=&quot;Method&quot;</div><div class="line"></div><div class="line">HouseUpImg</div><div class="line">--5CEDCCFA-7F63-4C2D-A3F5-02BD9D42DA80--</div></pre></td></tr></table></figure>
</li>
</ul>
<p>可以很容易看出，这个请求体是多个相同的部分组成的：每一个部分都是以–加分隔符开始的，然后是该部分内容的描述信息，然后一个回车，然后是描述信息的具体内容；如果传送的内容是一个文件的话，那么还会包含文件名信息，以及文件内容的类型。上面的第二个小部分其实是一个文件体的结构，最后会以–分割符–结尾，表示请求体结束。</p>
<p>综上，可以知道要发送一个multipart/form-data的请求，其实任何支持post请求的工具或语言都可以支持，只是自己要稍微包装一下便可。</p>
<h2 id="Objective-C代码实现"><a href="#Objective-C代码实现" class="headerlink" title="Objective-C代码实现"></a>Objective-C代码实现</h2><p>上传多张图片的网络请求方法定义：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div></pre></td><td class="code"><pre><div class="line">/**</div><div class="line"> 上传多张图片</div><div class="line"></div><div class="line"> @param URLString 请求url</div><div class="line"> @param parameters 参数</div><div class="line"> @param images 图片数组@[UIImage]</div><div class="line"> @param completion 回调block</div><div class="line"> */</div><div class="line">+ (void)upload:(NSString *)URLString parameters:(NSDictionary *)parameters images:(NSArray *)images completion:(ApiCompletion)completion</div><div class="line">&#123;</div><div class="line">    NSMutableURLRequest *request = [[NSMutableURLRequest alloc]initWithURL:[NSURL URLWithString:[NSString stringWithFormat:@&quot;%@%@&quot;,kBaseUrl,URLString]] cachePolicy:NSURLRequestUseProtocolCachePolicy timeoutInterval:60.0];</div><div class="line">    NSURLSession *session = [NSURLSession sharedSession];</div><div class="line">    BLFormMultipartUtil *formMultipart = [[BLFormMultipartUtil alloc]init];</div><div class="line">    //添加公用参数</div><div class="line">    NSMutableDictionary *dic = [[NSMutableDictionary alloc]initWithDictionary:parameters];</div><div class="line">    //dic addObject......</div><div class="line">    //添加文本字典参数，formParts是存储BLFormPart类型的数组</div><div class="line">    for (NSString *key in dic) &#123;</div><div class="line">        [formMultipart.formParts addObject:[[BLFormPart alloc] initTextWithName:key text:dic[key]]];</div><div class="line">    &#125;</div><div class="line">    //添加图片data参数，formParts是存储BLFormPart类型的数组</div><div class="line">    for (int i = 0; i &lt; images.count; i++) &#123;</div><div class="line">        [formMultipart.formParts addObject:[[BLFormPart alloc] initBinaryWithName:@&quot;image&quot; data:UIImageJPEGRepresentation(images[i], 0.2) filename:[NSString stringWithFormat:@&quot;image%d.jpg&quot;,i] contentType:@&quot;image/jpeg&quot;]];</div><div class="line">    &#125;</div><div class="line">    //设置请求头和请求体</div><div class="line">    request.HTTPMethod = @&quot;POST&quot;;</div><div class="line">    request.HTTPBody = [formMultipart gegenerateBody];</div><div class="line">    //contentType为&quot;multipart/form-data; boundary=$&#123;bound&#125;&quot;</div><div class="line">    [request addValue:[formMultipart contentType] forHTTPHeaderField:@&quot;Content-Type&quot;];</div><div class="line">    //发起请求</div><div class="line">    NSURLSessionDataTask *task =[session dataTaskWithRequest:request completionHandler:^(NSData * _Nullable data, NSURLResponse * _Nullable response, NSError * _Nullable error) &#123;</div><div class="line">        //数据处理......</div><div class="line">    &#125;];</div><div class="line">    [task resume];</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>BLFormPart类只是用来存储文本参数和文件参数的一个模型类，定义如下：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line">typedef NS_ENUM(NSUInteger, FormPart) &#123;</div><div class="line">    FormPartText,</div><div class="line">    FormPartBinary,</div><div class="line">&#125;;</div><div class="line"></div><div class="line">@interface BLFormPart : NSObject</div><div class="line"></div><div class="line">@property (nonatomic,assign)FormPart formPartEnum;</div><div class="line">@property (nonatomic,strong)NSString *name;</div><div class="line">@property (nonatomic,strong)NSString *text;</div><div class="line">@property (nonatomic,strong)NSString *filename;</div><div class="line">@property (nonatomic,strong)NSString *contentType;</div><div class="line">@property (nonatomic,strong)NSData   *data;</div><div class="line"></div><div class="line">- (instancetype)initTextWithName:(NSString *)name text:(NSString *)text;</div><div class="line"></div><div class="line">- (instancetype)initBinaryWithName:(NSString *)name data:(NSData *)data filename:(NSString *)filename contentType:(NSString *)contentType;</div><div class="line"></div><div class="line">@end</div></pre></td></tr></table></figure>
<p>BLFormMultipartUtil类中有一个存储BLFormPart类型对象的数组，和一个生成请求体的方法gegenerateBody。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">@interface BLFormMultipartUtil : NSObject</div><div class="line"></div><div class="line">@property (nonatomic, strong)NSMutableArray *formParts;</div><div class="line">@property (nonatomic, strong)NSString *contentType;</div><div class="line"></div><div class="line">- (NSData *)gegenerateBody;</div><div class="line"></div><div class="line">@end</div></pre></td></tr></table></figure>
<p>gegenerateBody方法用来拼接multipart方式请求的请求体，定义如下：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line">- (NSData *)gegenerateBody</div><div class="line">&#123;</div><div class="line">    NSMutableData *mutableData = [[NSMutableData alloc]init];</div><div class="line">    for (BLFormPart *formPart in self.formParts) &#123;</div><div class="line">        [mutableData appendString:[NSString stringWithFormat:@&quot;--%@\r\n&quot;,_boundary]];</div><div class="line">        if (formPart.formPartEnum == FormPartText) &#123;</div><div class="line">            // part headers for text</div><div class="line">            [mutableData appendString:[NSString stringWithFormat:@&quot;Content-Disposition: form-data; name=\&quot;%@\&quot;\&quot;\r\n&quot;,formPart.name]];</div><div class="line">            [mutableData appendString:@&quot;\r\n&quot;];</div><div class="line">            [mutableData appendString:formPart.text];</div><div class="line">        &#125;else if (formPart.formPartEnum == FormPartBinary)&#123;</div><div class="line">            // part headers for files</div><div class="line">            [mutableData appendString:[NSString stringWithFormat:@&quot;Content-Disposition: form-data; name=\&quot;%@\&quot;; filename=\&quot;%@\&quot;\r\n&quot;,formPart.name,formPart.filename]];</div><div class="line">            [mutableData appendString:[NSString stringWithFormat:@&quot;Content-Type: %@\r\n&quot;,formPart.contentType]];</div><div class="line">            [mutableData appendString:@&quot;\r\n&quot;];</div><div class="line">            [mutableData appendData:formPart.data];</div><div class="line">        &#125;</div><div class="line">        [mutableData appendString:@&quot;\r\n&quot;];</div><div class="line">    &#125;</div><div class="line">    [mutableData appendString:[NSString stringWithFormat:@&quot;--%@\r\n&quot;,_boundary]];</div><div class="line">    return mutableData;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Unescaped control character around character ***]]></title>
      <url>http://www.bigliang.com/2016/10/10/Unescaped-control-character-around-character/</url>
      <content type="html"><![CDATA[<p>iOS应用在解析服务器返回的JSON数据的时候出现“Unescaped control character around character <em>*</em> ”的错误。<a id="more"></a></p>
<p>原因是JSON数据包换了转义字符，解决方法就是去掉这些转义字符即可。</p>
<p>代码如下：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">static func removeUnescapedCharacter(data:NSData)-&gt;NSData&#123;</div><div class="line">    let str = NSString(data: data, encoding: NSUTF8StringEncoding)</div><div class="line">    var controlChars = NSCharacterSet.controlCharacterSet()</div><div class="line">    var range:NSRange = str!.rangeOfCharacterFromSet(controlChars)</div><div class="line">    if range.location != NSNotFound&#123;</div><div class="line">        var mStr:NSMutableString = NSMutableString(string: str!)</div><div class="line">        while(range.location != NSNotFound)&#123;</div><div class="line">            mStr.deleteCharactersInRange(range)</div><div class="line">            range = mStr.rangeOfCharacterFromSet(controlChars)</div><div class="line">        &#125;</div><div class="line">        return mStr.dataUsingEncoding(NSUTF8StringEncoding)!</div><div class="line">    &#125;</div><div class="line">    return str!.dataUsingEncoding(NSUTF8StringEncoding)!</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[iOS去除警告]]></title>
      <url>http://www.bigliang.com/2016/09/23/iOS%E5%8E%BB%E9%99%A4%E8%AD%A6%E5%91%8A/</url>
      <content type="html"><![CDATA[<p>首先学会基本的语句</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">#pragma clang diagnostic push</div><div class="line">#pragma clang diagnostic ignored &quot;-Wdeprecated-declarations&quot;</div></pre></td></tr></table></figure>
<p>这里写出现警告的代码</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">#pragma clang diagnostic pop</div></pre></td></tr></table></figure>
<p>这样就消除了方法弃用的警告！</p>
<p>同理, 大家可以在下边搜索到对应的警告, 这样 就可以把前边的字串填入上边的ignored的后边, 然后阔住你的代码, 就OK了。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div><div class="line">145</div><div class="line">146</div><div class="line">147</div><div class="line">148</div><div class="line">149</div><div class="line">150</div><div class="line">151</div><div class="line">152</div><div class="line">153</div><div class="line">154</div><div class="line">155</div><div class="line">156</div><div class="line">157</div><div class="line">158</div><div class="line">159</div><div class="line">160</div><div class="line">161</div><div class="line">162</div><div class="line">163</div><div class="line">164</div><div class="line">165</div><div class="line">166</div><div class="line">167</div><div class="line">168</div><div class="line">169</div><div class="line">170</div><div class="line">171</div><div class="line">172</div><div class="line">173</div><div class="line">174</div><div class="line">175</div><div class="line">176</div><div class="line">177</div><div class="line">178</div><div class="line">179</div><div class="line">180</div><div class="line">181</div><div class="line">182</div><div class="line">183</div><div class="line">184</div><div class="line">185</div><div class="line">186</div><div class="line">187</div><div class="line">188</div><div class="line">189</div><div class="line">190</div><div class="line">191</div><div class="line">192</div><div class="line">193</div><div class="line">194</div><div class="line">195</div><div class="line">196</div><div class="line">197</div><div class="line">198</div><div class="line">199</div><div class="line">200</div><div class="line">201</div><div class="line">202</div><div class="line">203</div><div class="line">204</div><div class="line">205</div><div class="line">206</div><div class="line">207</div><div class="line">208</div><div class="line">209</div><div class="line">210</div><div class="line">211</div><div class="line">212</div><div class="line">213</div><div class="line">214</div><div class="line">215</div><div class="line">216</div><div class="line">217</div><div class="line">218</div><div class="line">219</div><div class="line">220</div><div class="line">221</div><div class="line">222</div><div class="line">223</div><div class="line">224</div><div class="line">225</div><div class="line">226</div><div class="line">227</div><div class="line">228</div><div class="line">229</div><div class="line">230</div><div class="line">231</div><div class="line">232</div><div class="line">233</div><div class="line">234</div><div class="line">235</div><div class="line">236</div><div class="line">237</div><div class="line">238</div><div class="line">239</div><div class="line">240</div><div class="line">241</div><div class="line">242</div><div class="line">243</div><div class="line">244</div><div class="line">245</div><div class="line">246</div><div class="line">247</div><div class="line">248</div><div class="line">249</div><div class="line">250</div><div class="line">251</div><div class="line">252</div><div class="line">253</div><div class="line">254</div><div class="line">255</div><div class="line">256</div><div class="line">257</div><div class="line">258</div><div class="line">259</div><div class="line">260</div><div class="line">261</div><div class="line">262</div><div class="line">263</div><div class="line">264</div><div class="line">265</div><div class="line">266</div><div class="line">267</div><div class="line">268</div><div class="line">269</div><div class="line">270</div><div class="line">271</div><div class="line">272</div><div class="line">273</div><div class="line">274</div><div class="line">275</div><div class="line">276</div><div class="line">277</div><div class="line">278</div><div class="line">279</div><div class="line">280</div><div class="line">281</div><div class="line">282</div><div class="line">283</div><div class="line">284</div><div class="line">285</div><div class="line">286</div><div class="line">287</div><div class="line">288</div><div class="line">289</div><div class="line">290</div><div class="line">291</div><div class="line">292</div><div class="line">293</div><div class="line">294</div><div class="line">295</div><div class="line">296</div><div class="line">297</div><div class="line">298</div><div class="line">299</div><div class="line">300</div><div class="line">301</div><div class="line">302</div><div class="line">303</div><div class="line">304</div><div class="line">305</div><div class="line">306</div><div class="line">307</div><div class="line">308</div><div class="line">309</div><div class="line">310</div><div class="line">311</div><div class="line">312</div><div class="line">313</div><div class="line">314</div><div class="line">315</div><div class="line">316</div><div class="line">317</div><div class="line">318</div><div class="line">319</div><div class="line">320</div><div class="line">321</div><div class="line">322</div><div class="line">323</div><div class="line">324</div><div class="line">325</div><div class="line">326</div><div class="line">327</div><div class="line">328</div><div class="line">329</div><div class="line">330</div><div class="line">331</div><div class="line">332</div><div class="line">333</div><div class="line">334</div><div class="line">335</div><div class="line">336</div><div class="line">337</div><div class="line">338</div><div class="line">339</div><div class="line">340</div><div class="line">341</div><div class="line">342</div><div class="line">343</div><div class="line">344</div><div class="line">345</div><div class="line">346</div><div class="line">347</div><div class="line">348</div><div class="line">349</div><div class="line">350</div><div class="line">351</div><div class="line">352</div><div class="line">353</div><div class="line">354</div><div class="line">355</div><div class="line">356</div><div class="line">357</div><div class="line">358</div><div class="line">359</div><div class="line">360</div><div class="line">361</div><div class="line">362</div><div class="line">363</div><div class="line">364</div><div class="line">365</div><div class="line">366</div><div class="line">367</div><div class="line">368</div><div class="line">369</div><div class="line">370</div><div class="line">371</div><div class="line">372</div><div class="line">373</div><div class="line">374</div><div class="line">375</div><div class="line">376</div><div class="line">377</div><div class="line">378</div><div class="line">379</div><div class="line">380</div><div class="line">381</div><div class="line">382</div><div class="line">383</div><div class="line">384</div><div class="line">385</div><div class="line">386</div><div class="line">387</div><div class="line">388</div><div class="line">389</div><div class="line">390</div><div class="line">391</div><div class="line">392</div><div class="line">393</div><div class="line">394</div><div class="line">395</div><div class="line">396</div><div class="line">397</div><div class="line">398</div><div class="line">399</div><div class="line">400</div><div class="line">401</div><div class="line">402</div><div class="line">403</div><div class="line">404</div><div class="line">405</div><div class="line">406</div><div class="line">407</div><div class="line">408</div><div class="line">409</div><div class="line">410</div><div class="line">411</div><div class="line">412</div><div class="line">413</div><div class="line">414</div><div class="line">415</div><div class="line">416</div><div class="line">417</div><div class="line">418</div><div class="line">419</div><div class="line">420</div><div class="line">421</div><div class="line">422</div><div class="line">423</div><div class="line">424</div><div class="line">425</div><div class="line">426</div><div class="line">427</div><div class="line">428</div><div class="line">429</div><div class="line">430</div><div class="line">431</div><div class="line">432</div><div class="line">433</div><div class="line">434</div><div class="line">435</div><div class="line">436</div><div class="line">437</div><div class="line">438</div><div class="line">439</div><div class="line">440</div><div class="line">441</div><div class="line">442</div><div class="line">443</div><div class="line">444</div><div class="line">445</div><div class="line">446</div><div class="line">447</div><div class="line">448</div><div class="line">449</div><div class="line">450</div><div class="line">451</div><div class="line">452</div><div class="line">453</div><div class="line">454</div><div class="line">455</div><div class="line">456</div><div class="line">457</div><div class="line">458</div><div class="line">459</div><div class="line">460</div><div class="line">461</div><div class="line">462</div><div class="line">463</div><div class="line">464</div><div class="line">465</div><div class="line">466</div><div class="line">467</div><div class="line">468</div><div class="line">469</div><div class="line">470</div><div class="line">471</div><div class="line">472</div><div class="line">473</div><div class="line">474</div><div class="line">475</div><div class="line">476</div><div class="line">477</div><div class="line">478</div><div class="line">479</div><div class="line">480</div><div class="line">481</div><div class="line">482</div><div class="line">483</div><div class="line">484</div><div class="line">485</div><div class="line">486</div><div class="line">487</div><div class="line">488</div><div class="line">489</div><div class="line">490</div><div class="line">491</div><div class="line">492</div><div class="line">493</div><div class="line">494</div><div class="line">495</div><div class="line">496</div><div class="line">497</div><div class="line">498</div><div class="line">499</div><div class="line">500</div><div class="line">501</div><div class="line">502</div><div class="line">503</div><div class="line">504</div><div class="line">505</div><div class="line">506</div><div class="line">507</div><div class="line">508</div><div class="line">509</div><div class="line">510</div><div class="line">511</div><div class="line">512</div><div class="line">513</div><div class="line">514</div><div class="line">515</div><div class="line">516</div><div class="line">517</div><div class="line">518</div><div class="line">519</div><div class="line">520</div><div class="line">521</div><div class="line">522</div><div class="line">523</div><div class="line">524</div><div class="line">525</div><div class="line">526</div><div class="line">527</div><div class="line">528</div><div class="line">529</div><div class="line">530</div><div class="line">531</div><div class="line">532</div><div class="line">533</div><div class="line">534</div><div class="line">535</div><div class="line">536</div><div class="line">537</div><div class="line">538</div><div class="line">539</div><div class="line">540</div><div class="line">541</div><div class="line">542</div><div class="line">543</div><div class="line">544</div><div class="line">545</div><div class="line">546</div><div class="line">547</div><div class="line">548</div><div class="line">549</div><div class="line">550</div><div class="line">551</div><div class="line">552</div><div class="line">553</div><div class="line">554</div><div class="line">555</div><div class="line">556</div><div class="line">557</div><div class="line">558</div><div class="line">559</div><div class="line">560</div><div class="line">561</div><div class="line">562</div></pre></td><td class="code"><pre><div class="line">Semantic Warnings</div><div class="line">Warning    Message</div><div class="line">-WCFString-literal    input conversion stopped due to an input byte that does not belong to the input codeset UTF-8</div><div class="line">-WNSObject-attribute    __attribute ((NSObject)) may be put on a typedef only, attribute is ignored</div><div class="line">-Wabstract-vbase-init    initializer for virtual base class %0 of abstract class %1 will never be used</div><div class="line">-Waddress-of-array-temporary    pointer is initialized by a temporary array, which will be destroyed at the end of the full-expression</div><div class="line">-Warc-maybe-repeated-use-of-weak    &quot;weak %select&#123;variable|property|implicit property|instance variable&#125;0 %1 may be accessed multiple times in this %select&#123;function|method|block|lambda&#125;2 and may be unpredictably set to nil assign to a strong variable to keep the object alive</div><div class="line">-Warc-non-pod-memaccess    %select&#123;destination for|source of&#125;0 this %1 call is a pointer to ownership-qualified type %2</div><div class="line">-Warc-performSelector-leaks    performSelector may cause a leak because its selector is unknown</div><div class="line">-Warc-repeated-use-of-weak    &quot;weak %select&#123;variable|property|implicit property|instance variable&#125;0 %1 is accessed multiple times in this %select&#123;function|method|block|lambda&#125;2 but may be unpredictably set to nil assign to a strong variable to keep the object alive</div><div class="line">-Warc-retain-cycles    capturing %0 strongly in this block is likely to lead to a retain cycle</div><div class="line">-Warc-unsafe-retained-assign    assigning retained object to unsafe property object will be released after assignment</div><div class="line">-Warc-unsafe-retained-assign    assigning %select&#123;array literal|dictionary literal|numeric literal|boxed expression|should not happen|block literal&#125;0 to a weak %select&#123;property|variable&#125;1 object will be released after assignment</div><div class="line">-Warc-unsafe-retained-assign    assigning retained object to %select&#123;weak|unsafe_unretained&#125;0 %select&#123;property|variable&#125;1 object will be released after assignment</div><div class="line">-Warray-bounds    array index %0 is past the end of the array (which contains %1 element%s2)</div><div class="line">-Warray-bounds    array index %0 is before the beginning of the array</div><div class="line">-Warray-bounds    &apos;static&apos; has no effect on zero-length arrays</div><div class="line">-Warray-bounds    array argument is too small contains %0 elements, callee requires at least %1</div><div class="line">-Warray-bounds-pointer-arithmetic    the pointer incremented by %0 refers past the end of the array (that contains %1 element%s2)</div><div class="line">-Warray-bounds-pointer-arithmetic    the pointer decremented by %0 refers before the beginning of the array</div><div class="line">-Wassign-enum    integer constant not in range of enumerated type %0</div><div class="line">-Watomic-property-with-user-defined-accessor    writable atomic property %0 cannot pair a synthesized %select&#123;getter|setter&#125;1 with a user defined %select&#123;getter|setter&#125;2</div><div class="line">-Wattributes    unknown attribute %0 ignored</div><div class="line">-Wauto-var-id    &apos;auto&apos; deduced as &apos;id&apos; in declaration of %0</div><div class="line">-Wavailability    unknown platform %0 in availability macro</div><div class="line">-Wavailability    overriding method %select&#123;introduced after|deprecated before|obsoleted before&#125;0 overridden method on %1 (%2 vs. %3)</div><div class="line">-Wavailability    availability does not match previous declaration</div><div class="line">-Wavailability    overriding method cannot be unavailable on %0 when its overridden method is available</div><div class="line">-Wavailability    feature cannot be %select&#123;introduced|deprecated|obsoleted&#125;0 in %1 version %2 before it was %select&#123;introduced|deprecated|obsoleted&#125;3 in version %4 attribute ignored</div><div class="line">-Wbad-function-cast    cast from function call of type %0 to non-matching type %1</div><div class="line">-Wbitfield-constant-conversion    implicit truncation from %2 to bitfield changes value from %0 to %1</div><div class="line">-Wbitwise-op-parentheses    &apos;&amp;&apos; within &apos;|&apos;</div><div class="line">-Wbool-conversion    &quot;initialization of pointer of type %0 to null from a constant boolean &quot; &quot;expression</div><div class="line">-Wbridge-cast    %0 cannot bridge to %1</div><div class="line">-Wbridge-cast    %0 bridges to %1, not %2</div><div class="line">-Wbuiltin-requires-header    declaration of built-in function &apos;%0&apos; requires inclusion of the header stdio.h</div><div class="line">-Wbuiltin-requires-header    declaration of built-in function &apos;%0&apos; requires inclusion of the header setjmp.h</div><div class="line">-Wbuiltin-requires-header    declaration of built-in function &apos;%0&apos; requires inclusion of the header ucontext.h</div><div class="line">-Wc++-compat    %select&#123;|empty &#125;0%select&#123;struct|union&#125;1 has size 0 in C, %select&#123;size 1|non-zero size&#125;2 in C++</div><div class="line">-Wc++11-compat    explicit instantiation cannot be &apos;inline&apos;</div><div class="line">-Wc++11-compat    explicit instantiation of %0 must occur at global scope</div><div class="line">-Wc++11-compat    explicit instantiation of %0 not in a namespace enclosing %1</div><div class="line">-Wc++11-compat    explicit instantiation of %q0 must occur in namespace %1</div><div class="line">-Wc++11-narrowing    constant expression evaluates to %0 which cannot be narrowed to type %1 in C++11</div><div class="line">-Wc++11-narrowing    type %0 cannot be narrowed to %1 in initializer list in C++11</div><div class="line">-Wc++11-narrowing    non-constant-expression cannot be narrowed from type %0 to %1 in initializer list in C++11</div><div class="line">-Wc++98-c++11-compat    type definition in a constexpr %select&#123;function|constructor&#125;0 is incompatible with C++ standards before C++1y</div><div class="line">-Wc++98-c++11-compat    use of this statement in a constexpr %select&#123;function|constructor&#125;0 is incompatible with C++ standards before C++1y</div><div class="line">-Wc++98-c++11-compat    init-captures.def warn_cxx11_compat_init_capture : Warning &quot;initialized lambda captures are incompatible with C++ standards &quot; &quot;before C++1y</div><div class="line">-Wc++98-c++11-compat    variable declaration in a constexpr %select&#123;function|constructor&#125;0 is incompatible with C++ standards before C++1y</div><div class="line">-Wc++98-c++11-compat    constexpr function with no return statements is incompatible with C++ standards before C++1y</div><div class="line">-Wc++98-c++11-compat    multiple return statements in constexpr function is incompatible with C++ standards before C++1y</div><div class="line">-Wc++98-c++11-compat    variable templates are incompatible with C++ standards before C++1y</div><div class="line">-Wc++98-compat    substitution failure due to access control is incompatible with C++98</div><div class="line">-Wc++98-compat    %select&#123;anonymous struct|union&#125;0 member %1 with a non-trivial %select&#123;constructor|copy constructor|move constructor|copy assignment operator|move assignment operator|destructor&#125;2 is incompatible with C++98</div><div class="line">-Wc++98-compat    enumeration type in nested name specifier is incompatible with C++98</div><div class="line">-Wc++98-compat    static data member %0 in union is incompatible with C++98</div><div class="line">-Wc++98-compat    default template arguments for a function template are incompatible with C++98</div><div class="line">-Wc++98-compat    scalar initialized from empty initializer list is incompatible with C++98</div><div class="line">-Wc++98-compat    befriending %1 without &apos;%select&#123;struct|interface|union|class|enum&#125;0&apos; keyword is incompatible with C++98</div><div class="line">-Wc++98-compat    use of null pointer as non-type template argument is incompatible with C++98</div><div class="line">-Wc++98-compat    friend declaration naming a member of the declaring class is incompatible with C++98</div><div class="line">-Wc++98-compat    non-class friend type %0 is incompatible with C++98</div><div class="line">-Wc++98-compat    befriending enumeration type %0 is incompatible with C++98</div><div class="line">-Wc++98-compat    use of non-static data member %0 in an unevaluated context is incompatible with C++98</div><div class="line">-Wc++98-compat    friend function %0 would be implicitly redefined in C++98</div><div class="line">-Wc++98-compat    %select&#123;class template|class template partial|variable template|variable template partial|function template|member function|static data member|member class|member enumeration&#125;0 specialization of %1 outside namespace %2 is incompatible with C++98</div><div class="line">-Wc++98-compat    reference initialized from initializer list is incompatible with C++98</div><div class="line">-Wc++98-compat    redundant parentheses surrounding address non-type template argument are incompatible with C++98</div><div class="line">-Wc++98-compat    initialization of initializer_list object is incompatible with C++98</div><div class="line">-Wc++98-compat    use of &apos;template&apos; keyword outside of a template is incompatible with C++98</div><div class="line">-Wc++98-compat    non-type template argument referring to %select&#123;function|object&#125;0 %1 with internal linkage is incompatible with C++98</div><div class="line">-Wc++98-compat    use of &apos;typename&apos; outside of a template is incompatible with C++98</div><div class="line">-Wc++98-compat    passing object of trivial but non-POD type %0 through variadic %select&#123;function|block|method|constructor&#125;1 is incompatible with C++98</div><div class="line">-Wc++98-compat    goto would jump into protected scope in C++98</div><div class="line">-Wc++98-compat    constructor call from initializer list is incompatible with C++98</div><div class="line">-Wc++98-compat    &apos;auto&apos; type specifier is incompatible with C++98</div><div class="line">-Wc++98-compat    delegating constructors are incompatible with C++98</div><div class="line">-Wc++98-compat    &apos;constexpr&apos; specifier is incompatible with C++98</div><div class="line">-Wc++98-compat    inheriting constructors are incompatible with C++98</div><div class="line">-Wc++98-compat    explicit conversion functions are incompatible with C++98</div><div class="line">-Wc++98-compat    switch case would be in a protected scope in C++98</div><div class="line">-Wc++98-compat    &apos;%0&apos; type specifier is incompatible with C++98</div><div class="line">-Wc++98-compat    indirect goto might cross protected scopes in C++98</div><div class="line">-Wc++98-compat-pedantic    cast between pointer-to-function and pointer-to-object is incompatible with C++98</div><div class="line">-Wc++98-compat-pedantic    implicit conversion from array size expression of type %0 to %select&#123;integral|enumeration&#125;1 type %2 is incompatible with C++98</div><div class="line">-Wcast-align    cast from %0 to %1 increases required alignment from %2 to %3</div><div class="line">-Wcast-of-sel-type    cast of type %0 to %1 is deprecated use sel_getName instead</div><div class="line">-Wchar-subscripts    array subscript is of type &apos;char&apos;</div><div class="line">-Wconditional-uninitialized    variable %0 may be uninitialized when %select&#123;used here|captured by block&#125;1</div><div class="line">-Wconstant-logical-operand    use of logical &apos;%0&apos; with constant operand</div><div class="line">-Wconstexpr-not-const    &apos;constexpr&apos; non-static member function will not be implicitly &apos;const&apos; in C++1y add &apos;const&apos; to avoid a change in behavior</div><div class="line">-Wconsumed    state of variable &apos;%0&apos; must match at the entry and exit of loop</div><div class="line">-Wconsumed    parameter &apos;%0&apos; not in expected state when the function returns: expected &apos;%1&apos;, observed &apos;%2&apos;</div><div class="line">-Wconsumed    argument not in expected state expected &apos;%0&apos;, observed &apos;%1&apos;</div><div class="line">-Wconsumed    invalid invocation of method &apos;%0&apos; on a temporary object while it is in the &apos;%1&apos; state</div><div class="line">-Wconsumed    return state set for an unconsumable type &apos;%0&apos;</div><div class="line">-Wconsumed    consumed analysis attribute is attached to member of class &apos;%0&apos; which isn&apos;t marked as consumable</div><div class="line">-Wconsumed    invalid invocation of method &apos;%0&apos; on object &apos;%1&apos; while it is in the &apos;%2&apos; state</div><div class="line">-Wconsumed    return value not in expected state expected &apos;%0&apos;, observed &apos;%1&apos;</div><div class="line">-Wconversion    implicit conversion discards imaginary component: %0 to %1</div><div class="line">-Wconversion    non-type template argument with value &apos;%0&apos; converted to &apos;%1&apos; for unsigned template parameter of type %2</div><div class="line">-Wconversion    implicit conversion loses floating-point precision: %0 to %1</div><div class="line">-Wconversion    implicit conversion loses integer precision: %0 to %1</div><div class="line">-Wconversion    non-type template argument value &apos;%0&apos; truncated to &apos;%1&apos; for template parameter of type %2</div><div class="line">-Wconversion    implicit conversion turns vector to scalar: %0 to %1</div><div class="line">-Wconversion    implicit conversion turns floating-point number into integer: %0 to %1</div><div class="line">-Wcovered-switch-default    default label in switch which covers all enumeration values</div><div class="line">-Wcustom-atomic-properties    atomic by default property %0 has a user defined %select&#123;getter|setter&#125;1 (property should be marked &apos;atomic&apos; if this is intended)</div><div class="line">-Wdangling-field    initializing pointer member %0 with the stack address of parameter %1</div><div class="line">-Wdangling-field    binding reference %select&#123;|subobject of &#125;1member %0 to a temporary value</div><div class="line">-Wdangling-field    binding reference member %0 to stack allocated parameter %1</div><div class="line">-Wdangling-initializer-list    array backing the initializer list will be destroyed at the end of %select&#123;the full-expression|the constructor&#125;0</div><div class="line">-Wdelete-incomplete    deleting pointer to incomplete type %0 may cause undefined behavior</div><div class="line">-Wdelete-non-virtual-dtor    delete called on %0 that is abstract but has non-virtual destructor</div><div class="line">-Wdelete-non-virtual-dtor    delete called on %0 that has virtual functions but non-virtual destructor</div><div class="line">-Wdeprecated    access declarations are deprecated use using declarations instead</div><div class="line">-Wdeprecated    definition of implicit copy %select&#123;constructor|assignment operator&#125;1 for %0 is deprecated because it has a user-declared %select&#123;copy %select&#123;assignment operator|constructor&#125;1|destructor&#125;2</div><div class="line">-Wdeprecated    dynamic exception specifications are deprecated</div><div class="line">-Wdeprecated-increment-bool    incrementing expression of type bool is deprecated</div><div class="line">-Wdeprecated-objc-isa-usage    assignment to Objective-C&apos;s isa is deprecated in favor of object_setClass()</div><div class="line">-Wdeprecated-objc-isa-usage    direct access to Objective-C&apos;s isa is deprecated in favor of object_getClass()</div><div class="line">-Wdeprecated-objc-pointer-introspection    bitmasking for introspection of Objective-C object pointers is strongly discouraged</div><div class="line">-Wdeprecated-objc-pointer-introspection-performSelector    warn_objc_pointer_masking.Text</div><div class="line">-Wdeprecated-writable-strings    dummy warning to enable -fconst-strings</div><div class="line">-Wdirect-ivar-access    instance variable %0 is being directly accessed</div><div class="line">-Wdistributed-object-modifiers    conflicting distributed object modifiers on return type in implementation of %0</div><div class="line">-Wdistributed-object-modifiers    conflicting distributed object modifiers on parameter type in implementation of %0</div><div class="line">-Wdivision-by-zero    division by zero is undefined</div><div class="line">-Wdivision-by-zero    remainder by zero is undefined</div><div class="line">-Wdocumentation    parameter &apos;%0&apos; not found in the function declaration</div><div class="line">-Wdocumentation    not a Doxygen trailing comment</div><div class="line">-Wduplicate-enum    element %0 has been implicitly assigned %1 which another element has been assigned</div><div class="line">-Wduplicate-method-match    multiple declarations of method %0 found and ignored</div><div class="line">-Wdynamic-class-memaccess    %select&#123;destination for|source of|first operand of|second operand of&#125;0 this %1 call is a pointer to dynamic class %2 vtable pointer will be %select&#123;overwritten|copied|moved|compared&#125;3</div><div class="line">-Wempty-body    switch statement has empty body</div><div class="line">-Wempty-body    for loop has empty body</div><div class="line">-Wempty-body    if statement has empty body</div><div class="line">-Wempty-body    range-based for loop has empty body</div><div class="line">-Wempty-body    while loop has empty body</div><div class="line">-Wenum-compare    comparison of two values with different enumeration types%diff&#123; ($ and $)|&#125;0,1</div><div class="line">-Wenum-conversion    implicit conversion from enumeration type %0 to different enumeration type %1</div><div class="line">-Wexit-time-destructors    declaration requires an exit-time destructor</div><div class="line">-Wexplicit-ownership-type    method parameter of type %0 with no explicit ownership</div><div class="line">-Wextern-c-compat    %select&#123;|empty &#125;0%select&#123;struct|union&#125;1 has size 0 in C, %select&#123;size 1|non-zero size&#125;2 in C++</div><div class="line">-Wextern-initializer    &apos;extern&apos; variable has an initializer</div><div class="line">-Wfloat-equal    comparing floating point with == or != is unsafe</div><div class="line">-Wformat    &quot;data argument position &apos;%0&apos; exceeds the number of data arguments (%1)</div><div class="line">-Wformat    position arguments in format strings start counting at 1 (not 0)</div><div class="line">-Wformat    invalid position specified for %select&#123;field width|field precision&#125;0</div><div class="line">-Wformat    cannot mix positional and non-positional arguments in format string</div><div class="line">-Wformat    values of type &apos;%0&apos; should not be used as format arguments add an explicit cast to %1 instead</div><div class="line">-Wformat    format specifies type %0 but the argument has type %1</div><div class="line">-Wformat    zero field width in scanf format string is unused</div><div class="line">-Wformat    no closing &apos;]&apos; for &apos;%%[&apos; in scanf format string</div><div class="line">-Wformat    format string should not be a wide string</div><div class="line">-Wformat    format string contains &apos;\\0&apos; within the string body</div><div class="line">-Wformat    &apos;%select&#123;*|.*&#125;0&apos; specified field %select&#123;width|precision&#125;0 is missing a matching &apos;int&apos; argument</div><div class="line">-Wformat    field %select&#123;width|precision&#125;0 should have type %1, but argument has type %2</div><div class="line">-Wformat    %select&#123;field width|precision&#125;0 used with &apos;%1&apos; conversion specifier, resulting in undefined behavior</div><div class="line">-Wformat    format string missing</div><div class="line">-Wformat    incomplete format specifier</div><div class="line">-Wformat    flag &apos;%0&apos; results in undefined behavior with &apos;%1&apos; conversion specifier</div><div class="line">-Wformat    flag &apos;%0&apos; is ignored when flag &apos;%1&apos; is present</div><div class="line">-Wformat    more &apos;%%&apos; conversions than data arguments</div><div class="line">-Wformat    length modifier &apos;%0&apos; results in undefined behavior or no effect with &apos;%1&apos; conversion specifier</div><div class="line">-Wformat-extra-args    data argument not used by format string</div><div class="line">-Wformat-invalid-specifier    invalid conversion specifier &apos;%0&apos;</div><div class="line">-Wformat-nonliteral    format string is not a string literal</div><div class="line">-Wformat-security    format string is not a string literal (potentially insecure)</div><div class="line">-Wformat-zero-length    format string is empty</div><div class="line">-Wgcc-compat    GCC does not allow the &apos;cleanup&apos; attribute argument to be anything other than a simple identifier</div><div class="line">-Wglobal-constructors    declaration requires a global constructor</div><div class="line">-Wglobal-constructors    declaration requires a global destructor</div><div class="line">-Wgnu-conditional-omitted-operand    use of GNU ?: conditional expression extension, omitting middle operand</div><div class="line">-Wheader-hygiene    using namespace directive in global context in header</div><div class="line">-Widiomatic-parentheses    using the result of an assignment as a condition without parentheses</div><div class="line">-Wignored-attributes    &apos;malloc&apos; attribute only applies to functions returning a pointer type</div><div class="line">-Wignored-attributes    %0 attribute only applies to %select&#123;functions|unions|variables and functions|functions and methods|parameters|functions, methods and blocks|functions, methods, and classes|functions, methods, and parameters|classes|variables|methods|variables, functions and labels|fields and global variables|structs|variables, functions and tag types|thread-local variables|variables and fields|variables, data members and tag types|types and namespaces|Objective-C interfaces&#125;1</div><div class="line">-Wignored-attributes    &apos;%0&apos; attribute cannot be specified on a definition</div><div class="line">-Wignored-attributes    __weak attribute cannot be specified on an automatic variable when ARC is not enabled</div><div class="line">-Wignored-attributes    Objective-C GC does not allow weak variables on the stack</div><div class="line">-Wignored-attributes    __weak attribute cannot be specified on a field declaration</div><div class="line">-Wignored-attributes    attribute %0 cannot be applied to %select&#123;functions|Objective-C method&#125;1 without return value</div><div class="line">-Wignored-attributes    attribute declaration must precede definition</div><div class="line">-Wignored-attributes    attribute %0 is ignored, place it after \&quot;%select&#123;class|struct|union|interface|enum&#125;1\&quot; to apply attribute to type declaration</div><div class="line">-Wignored-attributes    __declspec attribute %0 is not supported</div><div class="line">-Wignored-attributes    attribute %0 ignored, because it cannot be applied to a type</div><div class="line">-Wignored-attributes    attribute %0 after definition is ignored</div><div class="line">-Wignored-attributes    %0 attribute ignored</div><div class="line">-Wignored-attributes    &apos;sentinel&apos; attribute only supported for variadic %select&#123;functions|blocks&#125;0</div><div class="line">-Wignored-attributes    &apos;sentinel&apos; attribute requires named arguments</div><div class="line">-Wignored-attributes    &apos;%0&apos; only applies to %select&#123;function|pointer|Objective-C object or block pointer&#125;1 types type here is %2</div><div class="line">-Wignored-attributes    &apos;nonnull&apos; attribute applied to function with no pointer arguments</div><div class="line">-Wignored-attributes    %0 attribute can only be applied to instance variables or properties</div><div class="line">-Wignored-attributes    ibaction attribute can only be applied to Objective-C instance methods</div><div class="line">-Wignored-attributes    %0 calling convention ignored on variadic function</div><div class="line">-Wignored-attributes    %0 only applies to variables with static storage duration and functions</div><div class="line">-Wignored-attributes    %0 attribute argument not supported: %1</div><div class="line">-Wignored-attributes    #pramga ms_struct can not be used with dynamic classes or structures</div><div class="line">-Wignored-attributes    transparent union definition must contain at least one field transparent_union attribute ignored</div><div class="line">-Wignored-attributes    first field of a transparent union cannot have %select&#123;floating point|vector&#125;0 type %1 transparent_union attribute ignored</div><div class="line">-Wignored-attributes    &apos;gnu_inline&apos; attribute requires function to be marked &apos;inline&apos;, attribute ignored</div><div class="line">-Wignored-attributes    calling convention %0 ignored for this target</div><div class="line">-Wignored-attributes    transparent_union attribute can only be applied to a union definition attribute ignored</div><div class="line">-Wignored-attributes    %select&#123;alignment|size&#125;0 of field %1 (%2 bits) does not match the %select&#123;alignment|size&#125;0 of the first field in transparent union transparent_union attribute ignored</div><div class="line">-Wignored-attributes    attribute %0 is already applied</div><div class="line">-Wignored-attributes    %0 attribute ignored for field of type %1</div><div class="line">-Wignored-attributes    %0 attribute ignored when parsing type</div><div class="line">-Wignored-attributes    %0 attribute only applies to %select&#123;functions|methods|properties&#125;1 that return %select&#123;an Objective-C object|a pointer|a non-retainable pointer&#125;2</div><div class="line">-Wignored-attributes    %0 attribute only applies to %select&#123;Objective-C object|pointer&#125;1 parameters</div><div class="line">-Wignored-attributes    attribute %0 is already applied with different parameters</div><div class="line">-Wignored-attributes    unknown visibility %0</div><div class="line">-Wignored-qualifiers    &quot;&apos;%0&apos; type qualifier%s1 on return type %plural&#123;1:has|:have&#125;1 no effect</div><div class="line">-Wignored-qualifiers    ARC %select&#123;unused|__unsafe_unretained|__strong|__weak|__autoreleasing&#125;0 lifetime qualifier on return type is ignored</div><div class="line">-Wimplicit-atomic-properties    property is assumed atomic by default</div><div class="line">-Wimplicit-atomic-properties    property is assumed atomic when auto-synthesizing the property</div><div class="line">-Wimplicit-fallthrough    fallthrough annotation in unreachable code</div><div class="line">-Wimplicit-fallthrough    unannotated fall-through between switch labels</div><div class="line">-Wimplicit-fallthrough    fallthrough annotation does not directly precede switch label</div><div class="line">-Wimplicit-function-declaration    implicit declaration of function %0</div><div class="line">-Wimplicit-function-declaration    use of unknown builtin %0</div><div class="line">-Wimplicit-retain-self    &quot;block implicitly retains &apos;self&apos; explicitly mention &apos;self&apos; to indicate this is intended behavior</div><div class="line">-Wincompatible-library-redeclaration    incompatible redeclaration of library function %0</div><div class="line">-Wincomplete-implementation    method definition for %0 not found</div><div class="line">-Winherited-variadic-ctor    inheriting constructor does not inherit ellipsis</div><div class="line">-Winitializer-overrides    subobject initialization overrides initialization of other fields within its enclosing subobject</div><div class="line">-Winitializer-overrides    initializer overrides prior initialization of this subobject</div><div class="line">-Wint-to-pointer-cast    cast to %1 from smaller integer type %0</div><div class="line">-Wint-to-void-pointer-cast    cast to %1 from smaller integer type %0</div><div class="line">-Winvalid-iboutlet    IBOutletCollection properties should be copy/strong and not assign</div><div class="line">-Winvalid-iboutlet    %select&#123;instance variable|property&#125;2 with %0 attribute must be an object type (invalid %1)</div><div class="line">-Winvalid-noreturn    function %0 declared &apos;noreturn&apos; should not return</div><div class="line">-Winvalid-noreturn    function declared &apos;noreturn&apos; should not return</div><div class="line">-Wlarge-by-value-copy    return value of %0 is a large (%1 bytes) pass-by-value object pass it by reference instead ?</div><div class="line">-Wlarge-by-value-copy    %0 is a large (%1 bytes) pass-by-value argument pass it by reference instead ?</div><div class="line">-Wliteral-conversion    implicit conversion from %0 to %1 changes value from %2 to %3</div><div class="line">-Wliteral-range    magnitude of floating-point constant too large for type %0 maximum is %1</div><div class="line">-Wliteral-range    magnitude of floating-point constant too small for type %0 minimum is %1</div><div class="line">-Wlogical-not-parentheses    logical not is only applied to the left hand side of this comparison</div><div class="line">-Wlogical-op-parentheses    &apos;&amp;&amp;&apos; within &apos;||&apos;</div><div class="line">-Wloop-analysis    variable%select&#123;s| %1|s %1 and %2|s %1, %2, and %3|s %1, %2, %3, and %4&#125;0 used in loop condition not modified in loop body</div><div class="line">-Wloop-analysis    variable %0 is %select&#123;decremented|incremented&#125;1 both in the loop header and in the loop body</div><div class="line">-Wmethod-signatures    conflicting parameter types in implementation of %0: %1 vs %2</div><div class="line">-Wmethod-signatures    conflicting return type in implementation of %0: %1 vs %2</div><div class="line">-Wmicrosoft    extra qualification on member %0</div><div class="line">-Wmismatched-method-attributes    attributes on method implementation and its declaration must match</div><div class="line">-Wmismatched-parameter-types    conflicting parameter types in implementation of %0%diff&#123;: $ vs $|&#125;1,2</div><div class="line">-Wmismatched-return-types    conflicting return type in implementation of %0%diff&#123;: $ vs $|&#125;1,2</div><div class="line">-Wmissing-braces    suggest braces around initialization of subobject</div><div class="line">-Wmissing-declarations    &apos;%0&apos; ignored on this declaration</div><div class="line">-Wmissing-field-initializers    missing field &apos;%0&apos; initializer</div><div class="line">-Wmissing-method-return-type    method has no return type specified defaults to &apos;id&apos;</div><div class="line">-Wmissing-noreturn    %select&#123;function|method&#125;0 %1 could be declared with attribute &apos;noreturn&apos;</div><div class="line">-Wmissing-noreturn    block could be declared with attribute &apos;noreturn&apos;</div><div class="line">-Wmissing-prototypes    no previous prototype for function %0</div><div class="line">-Wmissing-variable-declarations    no previous extern declaration for non-static variable %0</div><div class="line">-Wmultiple-move-vbase    defaulted move assignment operator of %0 will move assign virtual base class %1 multiple times</div><div class="line">-Wnested-anon-types    anonymous types declared in an anonymous union/struct are an extension</div><div class="line">-Wno-typedef-redefinition    Redefinition of typedef &apos;%0&apos; is a C11 feature</div><div class="line">-Wnon-literal-null-conversion    &quot;expression which evaluates to zero treated as a null pointer constant of &quot; &quot;type %0</div><div class="line">-Wnon-pod-varargs    second argument to &apos;va_arg&apos; is of ARC ownership-qualified type %0</div><div class="line">-Wnon-pod-varargs    cannot pass %select&#123;non-POD|non-trivial&#125;0 object of type %1 to variadic %select&#123;function|block|method|constructor&#125;2 expected type from format string was %3</div><div class="line">-Wnon-pod-varargs    second argument to &apos;va_arg&apos; is of non-POD type %0</div><div class="line">-Wnon-pod-varargs    cannot pass object of %select&#123;non-POD|non-trivial&#125;0 type %1 through variadic %select&#123;function|block|method|constructor&#125;2 call will abort at runtime</div><div class="line">-Wnon-virtual-dtor    %0 has virtual functions but non-virtual destructor</div><div class="line">-Wnonnull    null passed to a callee which requires a non-null argument</div><div class="line">-Wnull-arithmetic    use of NULL in arithmetic operation</div><div class="line">-Wnull-arithmetic    comparison between NULL and non-pointer %select&#123;(%1 and NULL)|(NULL and %1)&#125;0</div><div class="line">-Wnull-dereference    indirection of non-volatile null pointer will be deleted, not trap</div><div class="line">-Wobjc-autosynthesis-property-ivar-name-match    autosynthesized property %0 will use %select&#123;|synthesized&#125;1 instance variable %2, not existing instance variable %3</div><div class="line">-Wobjc-forward-class-redefinition    redefinition of forward class %0 of a typedef name of an object type is ignored</div><div class="line">-Wobjc-interface-ivars    declaration of instance variables in the interface is deprecated</div><div class="line">-Wobjc-literal-compare    direct comparison of %select&#123;an array literal|a dictionary literal|a numeric literal|a boxed expression|&#125;0 has undefined behavior</div><div class="line">-Wobjc-literal-missing-atsign    string literal must be prefixed by &apos;@&apos;</div><div class="line">-Wobjc-method-access    instance method %objcinstance0 not found (return type defaults to &apos;id&apos;) did you mean %objcinstance2?</div><div class="line">-Wobjc-method-access    class method %objcclass0 not found (return type defaults to &apos;id&apos;) did you mean %objcclass2?</div><div class="line">-Wobjc-method-access    instance method %objcinstance0 not found (return type defaults to &apos;id&apos;)</div><div class="line">-Wobjc-method-access    instance method %0 is being used on &apos;Class&apos; which is not in the root class</div><div class="line">-Wobjc-method-access    class method %objcclass0 not found (return type defaults to &apos;id&apos;)</div><div class="line">-Wobjc-method-access    instance method %0 found instead of class method %1</div><div class="line">-Wobjc-missing-property-synthesis    &quot;auto property synthesis is synthesizing property not explicitly synthesized</div><div class="line">-Wobjc-missing-super-calls    method possibly missing a [super %0] call</div><div class="line">-Wobjc-noncopy-retain-block-property    &quot;retain&apos;ed block property does not copy the block &quot; &quot;- use copy attribute instead</div><div class="line">-Wobjc-nonunified-exceptions    can not catch an exception thrown with @throw in C++ in the non-unified exception model</div><div class="line">-Wobjc-property-implementation    property %0 requires method %1 to be defined - use @dynamic or provide a method implementation in this category</div><div class="line">-Wobjc-property-implementation    property %0 requires method %1 to be defined - use @synthesize, @dynamic or provide a method implementation in this class implementation</div><div class="line">-Wobjc-property-implicit-mismatch    &quot;primary property declaration is implicitly strong while redeclaration in class extension is weak</div><div class="line">-Wobjc-property-matches-cocoa-ownership-rule    property&apos;s synthesized getter follows Cocoa naming convention for returning &apos;owned&apos; objects</div><div class="line">-Wobjc-property-no-attribute    no &apos;assign&apos;, &apos;retain&apos;, or &apos;copy&apos; attribute is specified - &apos;assign&apos; is assumed</div><div class="line">-Wobjc-property-no-attribute    default property attribute &apos;assign&apos; not appropriate for non-GC object</div><div class="line">-Wobjc-property-synthesis    auto property synthesis will not synthesize property &apos;%0&apos; because it is &apos;readwrite&apos; but it will be synthesized &apos;readonly&apos; via another property</div><div class="line">-Wobjc-property-synthesis    &quot;auto property synthesis will not synthesize property &apos;%0&apos; because it cannot share an ivar with another synthesized property</div><div class="line">-Wobjc-protocol-method-implementation    category is implementing a method which will also be implemented by its primary class</div><div class="line">-Wobjc-protocol-property-synthesis    auto property synthesis will not synthesize property declared in a protocol</div><div class="line">-Wobjc-redundant-literal-use    using %0 with a literal is redundant</div><div class="line">-Wobjc-root-class    class %0 defined without specifying a base class</div><div class="line">-Wobjc-string-compare    direct comparison of a string literal has undefined behavior</div><div class="line">-Wobjc-string-concatenation    concatenated NSString literal for an NSArray expression - possibly missing a comma</div><div class="line">-Wover-aligned    type %0 requires %1 bytes of alignment and the default allocator only guarantees %2 bytes</div><div class="line">-Woverloaded-shift-op-parentheses    overloaded operator %select&#123;|&#125;0 has lower precedence than comparison operator</div><div class="line">-Woverloaded-virtual    %q0 hides overloaded virtual %select&#123;function|functions&#125;1</div><div class="line">-Woverriding-method-mismatch    conflicting distributed object modifiers on parameter type in declaration of %0</div><div class="line">-Woverriding-method-mismatch    conflicting parameter types in declaration of %0: %1 vs %2</div><div class="line">-Woverriding-method-mismatch    conflicting variadic declaration of method and its implementation</div><div class="line">-Woverriding-method-mismatch    conflicting distributed object modifiers on return type in declaration of %0</div><div class="line">-Woverriding-method-mismatch    conflicting parameter types in declaration of %0%diff&#123;: $ vs $|&#125;1,2</div><div class="line">-Woverriding-method-mismatch    conflicting return type in declaration of %0%diff&#123;: $ vs $|&#125;1,2</div><div class="line">-Woverriding-method-mismatch    conflicting return type in declaration of %0: %1 vs %2</div><div class="line">-Wpacked    packed attribute is unnecessary for %0</div><div class="line">-Wpadded    padding %select&#123;struct|interface|class&#125;0 %1 with %2 %select&#123;byte|bit&#125;3%select&#123;|s&#125;4 to align anonymous bit-field</div><div class="line">-Wpadded    padding %select&#123;struct|interface|class&#125;0 %1 with %2 %select&#123;byte|bit&#125;3%select&#123;|s&#125;4 to align %5</div><div class="line">-Wpadded    padding size of %0 with %1 %select&#123;byte|bit&#125;2%select&#123;|s&#125;3 to alignment boundary</div><div class="line">-Wparentheses    using the result of an assignment as a condition without parentheses</div><div class="line">-Wparentheses    %0 has lower precedence than %1 %1 will be evaluated first</div><div class="line">-Wparentheses    operator &apos;?:&apos; has lower precedence than &apos;%0&apos; &apos;%0&apos; will be evaluated first</div><div class="line">-Wparentheses-equality    equality comparison with extraneous parentheses</div><div class="line">-Wpointer-arith    subtraction of pointers to type %0 of zero size has undefined behavior</div><div class="line">-Wpredefined-identifier-outside-function    predefined identifier is only valid inside function</div><div class="line">-Wprivate-extern    use of __private_extern__ on a declaration may not produce external symbol private to the linkage unit and is deprecated</div><div class="line">-Wprotocol    method %0 in protocol not implemented</div><div class="line">-Wprotocol-property-synthesis-ambiguity    property of type %0 was selected for synthesis</div><div class="line">-Wreadonly-iboutlet-property    readonly IBOutlet property &apos;%0&apos; when auto-synthesized may not work correctly with &apos;nib&apos; loader</div><div class="line">-Wreadonly-setter-attrs    property attributes &apos;%0&apos; and &apos;%1&apos; are mutually exclusive</div><div class="line">-Wreceiver-expr    receiver type %0 is not &apos;id&apos; or interface pointer, consider casting it to &apos;id&apos;</div><div class="line">-Wreceiver-forward-class    receiver type %0 for instance message is a forward declaration</div><div class="line">-Wreceiver-is-weak    &quot;weak %select&#123;receiver|property|implicit property&#125;0 may be unpredictably set to nil</div><div class="line">-Wreinterpret-base-class    &apos;reinterpret_cast&apos; %select&#123;from|to&#125;3 class %0 %select&#123;to|from&#125;3 its %select&#123;virtual base|base at non-zero offset&#125;2 %1 behaves differently from &apos;static_cast&apos;</div><div class="line">-Wreorder    %select&#123;field|base class&#125;0 %1 will be initialized after %select&#123;field|base&#125;2 %3</div><div class="line">-Wrequires-super-attribute    %0 attribute cannot be applied to %select&#123;methods in protocols|dealloc&#125;1</div><div class="line">-Wreturn-stack-address    returning address of local temporary object</div><div class="line">-Wreturn-stack-address    returning address of label, which is local</div><div class="line">-Wreturn-stack-address    address of stack memory associated with local variable %0 returned</div><div class="line">-Wreturn-stack-address    reference to stack memory associated with local variable %0 returned</div><div class="line">-Wreturn-stack-address    returning reference to local temporary object</div><div class="line">-Wreturn-type    control may reach end of non-void function</div><div class="line">-Wreturn-type    non-void %select&#123;function|method&#125;1 %0 should return a value, DefaultError</div><div class="line">-Wreturn-type    control reaches end of non-void function</div><div class="line">-Wreturn-type-c-linkage    %0 has C-linkage specified, but returns incomplete type %1 which could be incompatible with C</div><div class="line">-Wreturn-type-c-linkage    %0 has C-linkage specified, but returns user-defined type %1 which is incompatible with C</div><div class="line">-Wsection    section does not match previous declaration</div><div class="line">-Wselector    creating selector for nonexistent method %0</div><div class="line">-Wselector-type-mismatch    multiple selectors named %0 found</div><div class="line">-Wself-assign    explicitly assigning a variable of type %0 to itself</div><div class="line">-Wself-assign-field    assigning %select&#123;field|instance variable&#125;0 to itself</div><div class="line">-Wsentinel    &quot;missing sentinel in %select&#123;function call|method dispatch|block call&#125;0</div><div class="line">-Wsentinel    not enough variable arguments in %0 declaration to fit a sentinel</div><div class="line">-Wshadow    declaration shadows a %select&#123;&quot; &quot;local variable|&quot; &quot;variable in %2|&quot; &quot;static data member of %2|&quot; &quot;field of %2&#125;1</div><div class="line">-Wshadow-ivar    local declaration of %0 hides instance variable</div><div class="line">-Wshift-count-negative    shift count is negative</div><div class="line">-Wshift-count-overflow    shift count = width of type</div><div class="line">-Wshift-op-parentheses    operator &apos;%0&apos; has lower precedence than &apos;%1&apos; &apos;%1&apos; will be evaluated first</div><div class="line">-Wshift-overflow    signed shift result (%0) requires %1 bits to represent, but %2 only has %3 bits</div><div class="line">-Wshift-sign-overflow    signed shift result (%0) sets the sign bit of the shift expression&apos;s type (%1) and becomes negative</div><div class="line">-Wshorten-64-to-32    implicit conversion loses integer precision: %0 to %1</div><div class="line">-Wsign-compare    comparison of integers of different signs: %0 and %1</div><div class="line">-Wsign-conversion    implicit conversion changes signedness: %0 to %1</div><div class="line">-Wsign-conversion    operand of ? changes signedness: %0 to %1</div><div class="line">-Wsizeof-array-argument    sizeof on array function parameter will return size of %0 instead of %1</div><div class="line">-Wsizeof-array-decay    sizeof on pointer operation will return size of %0 instead of %1</div><div class="line">-Wsizeof-pointer-memaccess    &apos;%0&apos; call operates on objects of type %1 while the size is based on a &quot; &quot;different type %2</div><div class="line">-Wsizeof-pointer-memaccess    argument to &apos;sizeof&apos; in %0 call is the same pointer type %1 as the %select&#123;destination|source&#125;2 expected %3 or an explicit length</div><div class="line">-Wsometimes-uninitialized    variable %0 is %select&#123;used|captured&#125;1 uninitialized whenever %select&#123;&apos;%3&apos; condition is %select&#123;true|false&#125;4|&apos;%3&apos; loop %select&#123;is entered|exits because its condition is false&#125;4|&apos;%3&apos; loop %select&#123;condition is true|exits because its condition is false&#125;4|switch %3 is taken|its declaration is reached|%3 is called&#125;2</div><div class="line">-Wstatic-local-in-inline    non-constant static local variable in inline function may be different in different files</div><div class="line">-Wstatic-self-init    static variable %0 is suspiciously used within its own initialization</div><div class="line">-Wstrict-selector-match    multiple methods named %0 found</div><div class="line">-Wstring-compare    result of comparison against %select&#123;a string literal|@encode&#125;0 is unspecified (use strncmp instead)</div><div class="line">-Wstring-conversion    implicit conversion turns string literal into bool: %0 to %1</div><div class="line">-Wstring-plus-char    adding %0 to a string pointer does not append to the string</div><div class="line">-Wstring-plus-int    adding %0 to a string does not append to the string</div><div class="line">-Wstrlcpy-strlcat-size    size argument in %0 call appears to be size of the source expected the size of the destination</div><div class="line">-Wstrncat-size    the value of the size argument in &apos;strncat&apos; is too large, might lead to a &quot; &quot;buffer overflow</div><div class="line">-Wstrncat-size    size argument in &apos;strncat&apos; call appears &quot; &quot;to be size of the source</div><div class="line">-Wstrncat-size    the value of the size argument to &apos;strncat&apos; is wrong</div><div class="line">-Wsuper-class-method-mismatch    method parameter type %diff&#123;$ does not match super class method parameter type $|does not match super class method parameter type&#125;0,1</div><div class="line">-Wswitch    overflow converting case value to switch condition type (%0 to %1)</div><div class="line">-Wswitch    case value not in enumerated type %0</div><div class="line">-Wswitch    %0 enumeration values not handled in switch: %1, %2, %3...</div><div class="line">-Wswitch    enumeration values %0 and %1 not handled in switch</div><div class="line">-Wswitch    enumeration value %0 not handled in switch</div><div class="line">-Wswitch    enumeration values %0, %1, and %2 not handled in switch</div><div class="line">-Wswitch-enum    enumeration values %0, %1, and %2 not explicitly handled in switch</div><div class="line">-Wswitch-enum    enumeration values %0 and %1 not explicitly handled in switch</div><div class="line">-Wswitch-enum    %0 enumeration values not explicitly handled in switch: %1, %2, %3...</div><div class="line">-Wswitch-enum    enumeration value %0 not explicitly handled in switch</div><div class="line">-Wtautological-compare    comparison of %0 unsigned%select&#123;| enum&#125;2 expression is always %1</div><div class="line">-Wtautological-compare    %select&#123;self-|array &#125;0comparison always evaluates to %select&#123;false|true|a constant&#125;1</div><div class="line">-Wtautological-compare    comparison of unsigned%select&#123;| enum&#125;2 expression %0 is always %1</div><div class="line">-Wtautological-constant-out-of-range-compare    comparison of constant %0 with expression of type %1 is always %select&#123;false|true&#125;2</div><div class="line">-Wthread-safety-analysis    locking &apos;%0&apos; that is already locked</div><div class="line">-Wthread-safety-analysis    cannot call function &apos;%0&apos; while mutex &apos;%1&apos; is locked</div><div class="line">-Wthread-safety-analysis    %select&#123;reading|writing&#125;2 the value pointed to by &apos;%0&apos; requires locking %select&#123;&apos;%1&apos;|&apos;%1&apos; exclusively&#125;2</div><div class="line">-Wthread-safety-analysis    unlocking &apos;%0&apos; that was not locked</div><div class="line">-Wthread-safety-analysis    mutex &apos;%0&apos; is locked exclusively and shared in the same scope</div><div class="line">-Wthread-safety-analysis    calling function &apos;%0&apos; requires %select&#123;shared|exclusive&#125;2 lock on &apos;%1&apos;</div><div class="line">-Wthread-safety-analysis    %select&#123;reading|writing&#125;2 variable &apos;%0&apos; requires locking %select&#123;&apos;%1&apos;|&apos;%1&apos; exclusively&#125;2</div><div class="line">-Wthread-safety-analysis    cannot resolve lock expression</div><div class="line">-Wthread-safety-analysis    expecting mutex &apos;%0&apos; to be locked at the end of function</div><div class="line">-Wthread-safety-analysis    mutex &apos;%0&apos; is not locked on every path through here</div><div class="line">-Wthread-safety-analysis    %select&#123;reading|writing&#125;1 the value pointed to by &apos;%0&apos; requires locking %select&#123;any mutex|any mutex exclusively&#125;1</div><div class="line">-Wthread-safety-analysis    %select&#123;reading|writing&#125;1 variable &apos;%0&apos; requires locking %select&#123;any mutex|any mutex exclusively&#125;1</div><div class="line">-Wthread-safety-analysis    mutex &apos;%0&apos; is still locked at the end of function</div><div class="line">-Wthread-safety-analysis    expecting mutex &apos;%0&apos; to be locked at start of each loop</div><div class="line">-Wthread-safety-attributes    ignoring %0 attribute because its argument is invalid</div><div class="line">-Wthread-safety-attributes    %0 attribute only applies to %select&#123;fields and global variables|functions and methods|classes and structs&#125;1</div><div class="line">-Wthread-safety-attributes    %0 attribute requires arguments that are class type or point to class type type here is &apos;%1&apos;</div><div class="line">-Wthread-safety-attributes    %0 attribute can only be applied in a context annotated with &apos;lockable&apos; attribute</div><div class="line">-Wthread-safety-attributes    %0 attribute requires arguments whose type is annotated with &apos;lockable&apos; attribute type here is &apos;%1&apos;</div><div class="line">-Wthread-safety-attributes    &apos;%0&apos; only applies to pointer types type here is %1</div><div class="line">-Wthread-safety-beta    Thread safety beta warning.</div><div class="line">-Wthread-safety-precise    %select&#123;reading|writing&#125;2 the value pointed to by &apos;%0&apos; requires locking %select&#123;&apos;%1&apos;|&apos;%1&apos; exclusively&#125;2</div><div class="line">-Wthread-safety-precise    %select&#123;reading|writing&#125;2 variable &apos;%0&apos; requires locking %select&#123;&apos;%1&apos;|&apos;%1&apos; exclusively&#125;2</div><div class="line">-Wthread-safety-precise    calling function &apos;%0&apos; requires %select&#123;shared|exclusive&#125;2 lock on &apos;%1&apos;</div><div class="line">-Wtype-safety    this type tag was not designed to be used with this function</div><div class="line">-Wtype-safety    specified %0 type tag requires a null pointer</div><div class="line">-Wtype-safety    argument type %0 doesn&apos;t match specified &apos;%1&apos; type tag %select&#123;that requires %3|&#125;2</div><div class="line">-Wundeclared-selector    undeclared selector %0 did you mean %1?</div><div class="line">-Wundeclared-selector    undeclared selector %0</div><div class="line">-Wundefined-inline    inline function %q0 is not defined</div><div class="line">-Wundefined-internal    %select&#123;function|variable&#125;0 %q1 has internal linkage but is not defined</div><div class="line">-Wundefined-reinterpret-cast    dereference of type %1 that was reinterpret_cast from type %0 has undefined behavior</div><div class="line">-Wundefined-reinterpret-cast    reinterpret_cast from %0 to %1 has undefined behavior</div><div class="line">-Wuninitialized    reference %0 is not yet bound to a value when used within its own initialization</div><div class="line">-Wuninitialized    field %0 is uninitialized when used here</div><div class="line">-Wuninitialized    block pointer variable %0 is uninitialized when captured by block</div><div class="line">-Wuninitialized    variable %0 is uninitialized when used within its own initialization</div><div class="line">-Wuninitialized    variable %0 is uninitialized when %select&#123;used here|captured by block&#125;1</div><div class="line">-Wuninitialized    reference %0 is not yet bound to a value when used here</div><div class="line">-Wunneeded-internal-declaration    %select&#123;function|variable&#125;0 %1 is not needed and will not be emitted</div><div class="line">-Wunneeded-internal-declaration    &apos;static&apos; function %0 declared in header file should be declared &apos;static inline&apos;</div><div class="line">-Wunneeded-member-function    member function %0 is not needed and will not be emitted</div><div class="line">-Wunreachable-code    will never be executed</div><div class="line">-Wunsequenced    multiple unsequenced modifications to %0</div><div class="line">-Wunsequenced    unsequenced modification and access to %0</div><div class="line">-Wunsupported-friend    dependent nested name specifier &apos;%0&apos; for friend template declaration is not supported ignoring this friend declaration</div><div class="line">-Wunsupported-friend    dependent nested name specifier &apos;%0&apos; for friend class declaration is not supported turning off access control for %1</div><div class="line">-Wunsupported-visibility    target does not support &apos;protected&apos; visibility using &apos;default&apos;</div><div class="line">-Wunused-comparison    %select&#123;equality|inequality&#125;0 comparison result unused</div><div class="line">-Wunused-const-variable    unused variable %0</div><div class="line">-Wunused-exception-parameter    unused exception parameter %0</div><div class="line">-Wunused-function    unused function %0</div><div class="line">-Wunused-label    unused label %0</div><div class="line">-Wunused-member-function    unused member function %0</div><div class="line">-Wunused-parameter    unused parameter %0</div><div class="line">-Wunused-private-field    private field %0 is not used</div><div class="line">-Wunused-property-ivar    ivar %0 which backs the property is not referenced in this property&apos;s accessor</div><div class="line">-Wunused-result    ignoring return value of function declared with warn_unused_result attribute</div><div class="line">-Wunused-value    ignoring return value of function declared with %0 attribute</div><div class="line">-Wunused-value    expression result unused should this cast be to &apos;void&apos;?</div><div class="line">-Wunused-value    expression result unused</div><div class="line">-Wunused-variable    unused variable %0</div><div class="line">-Wunused-volatile-lvalue    expression result unused assign into a variable to force a volatile load</div><div class="line">-Wused-but-marked-unused    %0 was marked unused but was used</div><div class="line">-Wuser-defined-literals    user-defined literal suffixes not starting with &apos;_&apos; are reserved%select&#123; no literal will invoke this operator|&#125;0</div><div class="line">-Wvarargs    second parameter of &apos;va_start&apos; not last named argument</div><div class="line">-Wvarargs    &apos;va_start&apos; has undefined behavior with reference types</div><div class="line">-Wvarargs    second argument to &apos;va_arg&apos; is of promotable type %0 this va_arg has undefined behavior because arguments will be promoted to %1</div><div class="line">-Wvector-conversion    incompatible vector types %select&#123;%diff&#123;assigning to $ from $|assigning to different types&#125;0,1|%diff&#123;passing $ to parameter of type $|passing to parameter of different type&#125;0,1|%diff&#123;returning $ from a function with result type $|returning from function with different return type&#125;0,1|%diff&#123;converting $ to type $|converting between types&#125;0,1|%diff&#123;initializing $ with an expression of type $|initializing with expression of different type&#125;0,1|%diff&#123;sending $ to parameter of type $|sending to parameter of different type&#125;0,1|%diff&#123;casting $ to type $|casting between types&#125;0,1&#125;2</div><div class="line">-Wvexing-parse    parentheses were disambiguated as a function declaration</div><div class="line">-Wvexing-parse    empty parentheses interpreted as a function declaration</div><div class="line">-Wvisibility    declaration of %0 will not be visible outside of this function</div><div class="line">-Wvisibility    redefinition of %0 will not be visible outside of this function</div><div class="line">-Wvla    variable length array used</div><div class="line">-Wvla-extension    variable length arrays are a C99 feature</div><div class="line">-Wweak-template-vtables    explicit template instantiation %0 will emit a vtable in every translation unit</div><div class="line">-Wweak-vtables    %0 has no out-of-line virtual method definitions; its vtable will be emitted in every translation unit</div><div class="line">Lexer Warnings</div><div class="line">Warning    Message</div><div class="line">-W#pragma-messages    %0</div><div class="line">-W#warnings    %0</div><div class="line">-W#warnings    %0</div><div class="line">-Wambiguous-macro    ambiguous expansion of macro %0</div><div class="line">-Wauto-import    treating #%select&#123;include|import|include_next|__include_macros&#125;0 as an import of module &apos;%1&apos;</div><div class="line">-Wbackslash-newline-escape    backslash and newline separated by space</div><div class="line">-Wc++11-compat    identifier after literal will be treated as a user-defined literal suffix in C++11</div><div class="line">-Wc++11-compat    &apos;%0&apos; is a keyword in C++11</div><div class="line">-Wc++98-c++11-compat    digit separators are incompatible with C++ standards before C++1y</div><div class="line">-Wc++98-c++11-compat-pedantic    binary integer literals are incompatible with C++ standards before C++1y</div><div class="line">-Wc++98-compat    raw string literals are incompatible with C++98</div><div class="line">-Wc++98-compat    unicode literals are incompatible with C++98</div><div class="line">-Wc++98-compat    universal character name referring to a control character is incompatible with C++98</div><div class="line">-Wc++98-compat    &apos;::&apos; is treated as digraph &apos;:&apos; (aka &apos;[&apos;) followed by &apos;:&apos; in C++98</div><div class="line">-Wc++98-compat    using this character in an identifier is incompatible with C++98</div><div class="line">-Wc++98-compat    specifying character &apos;%0&apos; with a universal character name is incompatible with C++98</div><div class="line">-Wc++98-compat-pedantic    variadic macros are incompatible with C++98</div><div class="line">-Wc++98-compat-pedantic    #line number greater than 32767 is incompatible with C++98</div><div class="line">-Wc++98-compat-pedantic    C++98 requires newline at end of file</div><div class="line">-Wc++98-compat-pedantic    empty macro arguments are incompatible with C++98</div><div class="line">-Wc99-compat    unicode literals are incompatible with C99</div><div class="line">-Wc99-compat    %select&#123;using this character in an identifier|starting an identifier with this character&#125;0 is incompatible with C99</div><div class="line">-Wcomment    &apos;/*&apos; within block comment</div><div class="line">-Wcomment    escaped newline between */ characters at block comment end</div><div class="line">-Wdisabled-macro-expansion    disabled expansion of recursive macro</div><div class="line">-Wheader-guard    %0 is used as a header guard here, followed by #define of a different macro</div><div class="line">-Wignored-attributes    unknown attribute &apos;%0&apos;</div><div class="line">-Wincomplete-module    header &apos;%0&apos; is included in module &apos;%1&apos; but not listed in module map</div><div class="line">-Wincomplete-umbrella    umbrella header for module &apos;%0&apos; does not include header &apos;%1&apos;</div><div class="line">-Winvalid-token-paste    pasting formed &apos;%0&apos;, an invalid preprocessing token, DefaultError</div><div class="line">-Wmalformed-warning-check    __has_warning expected option name (e.g. \&quot;-Wundef\&quot;)</div><div class="line">-Wnewline-eof    no newline at end of file</div><div class="line">-Wnull-character    null character ignored</div><div class="line">-Wnull-character    null character(s) preserved in string literal</div><div class="line">-Wnull-character    null character(s) preserved in character literal</div><div class="line">-Wtrigraphs    ignored trigraph would end block comment</div><div class="line">-Wtrigraphs    trigraph ignored</div><div class="line">-Wundef    %0 is not defined, evaluates to 0</div><div class="line">-Wunicode    universal character names are only valid in C99 or C++ treating as &apos;\\&apos; followed by identifier</div><div class="line">-Wunicode    \\%0 used with no following hex digits treating as &apos;\\&apos; followed by identifier</div><div class="line">-Wunicode    incomplete universal character name treating as &apos;\\&apos; followed by identifier</div><div class="line">-Wunicode    universal character name refers to a surrogate character</div><div class="line">-Wunknown-pragmas    unknown pragma ignored</div><div class="line">-Wunknown-pragmas    pragma STDC FENV_ACCESS ON is not supported, ignoring pragma</div><div class="line">-Wunused-macros    macro is not used</div><div class="line">Parser Warnings</div><div class="line">Warning    Message</div><div class="line">-Warc-bridge-casts-disallowed-in-nonarc    &apos;%0&apos; casts have no effect when not using ARC</div><div class="line">-Wattributes    unknown __declspec attribute %0 ignored</div><div class="line">-Wavailability    &apos;unavailable&apos; availability overrides all other availability information</div><div class="line">-Wc++11-compat    use of right-shift operator (&apos;&apos;) in template argument will require parentheses in C++11</div><div class="line">-Wc++11-compat    &apos;auto&apos; storage class specifier is redundant and incompatible with C++11</div><div class="line">-Wc++98-c++11-compat    &apos;decltype(auto)&apos; type specifier is incompatible with C++ standards before C++1y</div><div class="line">-Wc++98-compat    range-based for loop is incompatible with C++98</div><div class="line">-Wc++98-compat    alias declarations are incompatible with C++98</div><div class="line">-Wc++98-compat    in-class initialization of non-static data members is incompatible with C++98</div><div class="line">-Wc++98-compat    defaulted function definitions are incompatible with C++98</div><div class="line">-Wc++98-compat    rvalue references are incompatible with C++98</div><div class="line">-Wc++98-compat    reference qualifiers on functions are incompatible with C++98</div><div class="line">-Wc++98-compat    inline namespaces are incompatible with C++98</div><div class="line">-Wc++98-compat    generalized initializer lists are incompatible with C++98</div><div class="line">-Wc++98-compat    trailing return types are incompatible with C++98</div><div class="line">-Wc++98-compat    enumeration types with a fixed underlying type are incompatible with C++98</div><div class="line">-Wc++98-compat    alignof expressions are incompatible with C++98</div><div class="line">-Wc++98-compat    &apos;%0&apos; keyword is incompatible with C++98</div><div class="line">-Wc++98-compat    &apos;decltype&apos; type specifier is incompatible with C++98</div><div class="line">-Wc++98-compat    deleted function definitions are incompatible with C++98</div><div class="line">-Wc++98-compat    consecutive right angle brackets are incompatible with C++98 (use &apos;&gt; &gt;&apos;)</div><div class="line">-Wc++98-compat    static_assert declarations are incompatible with C++98</div><div class="line">-Wc++98-compat    scoped enumerations are incompatible with C++98</div><div class="line">-Wc++98-compat    lambda expressions are incompatible with C++98</div><div class="line">-Wc++98-compat    attributes are incompatible with C++98</div><div class="line">-Wc++98-compat    &apos;alignas&apos; is incompatible with C++98</div><div class="line">-Wc++98-compat    noexcept specifications are incompatible with C++98</div><div class="line">-Wc++98-compat    literal operators are incompatible with C++98</div><div class="line">-Wc++98-compat    noexcept expressions are incompatible with C++98</div><div class="line">-Wc++98-compat    &apos;nullptr&apos; is incompatible with C++98</div><div class="line">-Wc++98-compat-pedantic    extra &apos;&apos; outside of a function is incompatible with C++98</div><div class="line">-Wc++98-compat-pedantic    extern templates are incompatible with C++98</div><div class="line">-Wc++98-compat-pedantic    commas at the end of enumerator lists are incompatible with C++98</div><div class="line">-Wdangling-else    add explicit braces to avoid dangling else</div><div class="line">-Wdeprecated    Use of &apos;long&apos; with &apos;__vector&apos; is deprecated</div><div class="line">-Wdeprecated-declarations    use of C-style parameters in Objective-C method declarations is deprecated</div><div class="line">-Wdeprecated-register    &apos;register&apos; storage class specifier is deprecated</div><div class="line">-Wduplicate-decl-specifier    duplicate &apos;%0&apos; declaration specifier</div><div class="line">-Wextra-semi    extra &apos;;&apos; after member function definition</div><div class="line">-Wextra-tokens    &quot;extra tokens at the end of &apos;#pragma omp %0&apos; are ignored</div><div class="line">-Wgcc-compat    GCC does not allow %0 attribute in this position on a function definition</div><div class="line">-Wignored-attributes    attribute %0 ignored, because it is not attached to a declaration</div><div class="line">-Wmicrosoft-exists    dependent %select&#123;__if_not_exists|__if_exists&#125;0 declarations are ignored</div><div class="line">-Wmissing-selector-name    %0 used as the name of the previous parameter rather than as part of the selector</div><div class="line">-Wsemicolon-before-method-body    semicolon before method body is ignored</div><div class="line">-Wsource-uses-openmp    &quot;unexpected &apos;#pragma omp ...&apos; in program</div><div class="line">-Wstatic-inline-explicit-instantiation    ignoring &apos;%select&#123;static|inline&#125;0&apos; keyword on explicit template instantiation</div></pre></td></tr></table></figure>
<p>转自：<a href="http://www.jianshu.com/p/eb03e20f7b1c" target="_blank" rel="external">http://www.jianshu.com/p/eb03e20f7b1c</a></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[春夏秋冬]]></title>
      <url>http://www.bigliang.com/2016/09/22/%E6%98%A5%E5%A4%8F%E7%A7%8B%E5%86%AC/</url>
      <content type="html"><![CDATA[<p>近期一直在单曲循环的一首歌，感觉很好听。秋天该很好，你若尚在场。<a id="more"></a></p>
<h1 id="春夏秋冬"><a href="#春夏秋冬" class="headerlink" title="春夏秋冬"></a><strong><a href="http://music.163.com/#/song?id=187030" target="_blank" rel="external"><font color="#8B0000">春夏秋冬</font></a></strong></h1><h4 id="专辑：Forever-歌手：张国荣"><a href="#专辑：Forever-歌手：张国荣" class="headerlink" title="专辑：Forever    歌手：张国荣"></a>专辑：Forever    歌手：张国荣</h4><p></p><p><br>秋天该很好 你若尚在场</p>
<p>秋风即使带凉 亦漂亮</p>
<p>深秋中的你填密我梦想</p>
<p>就像落叶飞 轻敲我窗</p>
<p>冬天该很好 你若尚在场</p>
<p>天空多灰 我们亦放亮</p>
<p>一起坐坐谈谈来日动向</p>
<p>漠视外间低温 这样唱</p>
<p>能同途偶遇在这星球上</p>
<p>燃亮飘渺人生</p>
<p>我多么够运</p>
<p>无人如你逗留我思潮上</p>
<p>从没再疑问</p>
<p>这个世界好得很</p>
<p>暑天该很好 你若尚在场</p>
<p>火一般的太阳 在脸上</p>
<p>烧得肌肤如情 痕极又痒</p>
<p>滴着汗的一双 笑着唱</p>
<p>能同途偶遇在这星球上</p>
<p>燃亮飘渺人生</p>
<p>我多么够运</p>
<p>无人如你逗留我思潮上</p>
<p>从没再疑问</p>
<p>这个世界好得很</p>
<p>能同途偶遇在这星球上</p>
<p>是某种缘份</p>
<p>我多么庆幸</p>
<p>如离别 你亦长处心灵上</p>
<p>宁愿有遗憾</p>
<p>亦愿和你远亦近</p>
<p>春天该很好 你若尚在场</p>
<p>春风仿佛爱情 在蕴酝</p>
<p>初春中的你 撩动我幻想</p>
<p>就像嫩绿草使</p>
<p>春雨香</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Hello World]]></title>
      <url>http://www.bigliang.com/2016/07/19/hello-world/</url>
      <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="external">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="external">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="external">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo new <span class="string">"My New Post"</span></div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="external">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo server</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="external">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo generate</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="external">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo deploy</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="external">Deployment</a></p>
]]></content>
    </entry>
    
  
  
</search>
